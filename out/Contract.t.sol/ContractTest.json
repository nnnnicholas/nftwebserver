{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506133508061002d6000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80630a9254e414620000635780639642ddaf146200006f578063b5b346031462000079578063ba414fa61462000083578063fa7626d414620000a1575b600080fd5b6200006d620000af565b005b6200006d62000146565b6200006d620001b2565b6200008d620003d5565b604051901515815260200160405180910390f35b6000546200008d9060ff1681565b604051620000bd906200094f565b6040808252600e908201526d37333a103bb2b11039b2b93b32b960911b60608201526080602082018190526006908201526527232a2ba2a160d11b60a082015260c001604051809103906000f0801580156200011d573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b600060029054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200019757600080fd5b505af1158015620001ac573d6000803e3d6000fd5b50505050565b620001bc62000146565b600060405180610180016040528061014a815260200162002baa61014a9139905060006040518061062001604052806105e7815260200162002cf46105e791399050600082600060029054906101000a90046001600160a01b0316836040516020016200022c939291906200098c565b604051602081830303815290604052905060006200024a826200050a565b6040516020016200025c9190620009dc565b604051602081830303815290604052905060006200029b8260405160200162000286919062000a1c565b6040516020818303038152906040526200050a565b905080604051602001620002b0919062000af8565b60408051808303601f19018152908290526000805463c87b56dd60e01b845260048401919091529092506200034791620100009091046001600160a01b03169063c87b56dd90602401600060405180830381865afa15801562000317573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000341919081019062000b55565b62000684565b6000805460405163c87b56dd60e01b81526004810192909252620003ce91620100009091046001600160a01b03169063c87b56dd90602401600060405180830381865afa1580156200039d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003c7919081019062000b55565b82620006ce565b5050505050565b60008054610100900460ff1615620003f65750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620005055760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000487917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000c0e565b60408051601f1981840301815290829052620004a39162000c41565b6000604051808303816000865af19150503d8060008114620004e2576040519150601f19603f3d011682016040523d82523d6000602084013e620004e7565b606091505b509150508080602001905181019062000501919062000c5f565b9150505b919050565b60608151600014156200052b57505060408051602081019091526000815290565b6000604051806060016040528060408152602001620032db60409139905060006003845160026200055d919062000ca0565b62000569919062000cbb565b6200057690600462000cde565b905060006200058782602062000ca0565b67ffffffffffffffff811115620005a257620005a262000b3f565b6040519080825280601f01601f191660200182016040528015620005cd576020820181803683370190505b509050818152600183018586518101602084015b818310156200063b576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101620005e1565b6003895106600181146200065857600281146200066a5762000676565b613d3d60f01b60011983015262000676565b603d60f81b6000198301525b509398975050505050505050565b620006cb816040516024016200069b919062000d2e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526200081b565b50565b80604051602001620006e1919062000c41565b60405160208183030381529060405280519060200120826040516020016200070a919062000c41565b604051602081830303815290604052805190602001201462000817577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620007939060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620007cc919062000d43565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162000805919062000d79565b60405180910390a1620008176200083c565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200093e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620008d9929160200162000c0e565b60408051601f1981840301815290829052620008f59162000c41565b6000604051808303816000865af19150503d806000811462000934576040519150601f19603f3d011682016040523d82523d6000602084013e62000939565b606091505b505050505b6000805461ff001916610100179055565b611dfa8062000db083390190565b60005b838110156200097a57818101518382015260200162000960565b83811115620001ac5750506000910152565b60008451620009a08184602089016200095d565b606085901b6bffffffffffffffffffffffff19169083019081528351620009cf8160148401602088016200095d565b0160140195945050505050565b7519185d184e9d195e1d0bda1d1b5b0ed8985cd94d8d0b60521b81526000825162000a0f8160168501602087016200095d565b9190910160160192915050565b7f7b226e616d65223a20224e465420576562736572766572222c2022646573637281527f697074696f6e223a202254686973204e46542073657276657320616e2068746d60208201527f6c207061676520746861742063616e206265207573656420746f206d696e742060408201527f6d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e60608201526d171116101134b6b0b3b2911d101160911b60808201526000825162000adf81608e8501602087016200095d565b61227d60f01b608e939091019283015250609001919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825162000b3281601d8501602087016200095d565b91909101601d0192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000b6857600080fd5b815167ffffffffffffffff8082111562000b8157600080fd5b818401915084601f83011262000b9657600080fd5b81518181111562000bab5762000bab62000b3f565b604051601f8201601f19908116603f0116810190838211818310171562000bd65762000bd662000b3f565b8160405282815287602084870101111562000bf057600080fd5b62000c038360208301602088016200095d565b979650505050505050565b6001600160e01b031983168152815160009062000c338160048501602087016200095d565b919091016004019392505050565b6000825162000c558184602087016200095d565b9190910192915050565b60006020828403121562000c7257600080fd5b8151801515811462000c8357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111562000cb65762000cb662000c8a565b500190565b60008262000cd957634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161562000cfb5762000cfb62000c8a565b500290565b6000815180845262000d1a8160208601602086016200095d565b601f01601f19169290920160200192915050565b60208152600062000c83602083018462000d00565b60408152600a6040820152690808115e1c1958dd195960b21b606082015260806020820152600062000c83608083018462000d00565b60408152600a604082015269080808081058dd1d585b60b21b606082015260806020820152600062000c83608083018462000d0056fe61022060405261017e60808181529062001c7c60a03980516200002b91600791602090910190620000ca565b50604051806105600160405280610526815260200162001756610526913980516200005f91600891602090910190620000ca565b503480156200006d57600080fd5b5060405162001dfa38038062001dfa83398101604081905262000090916200023d565b815182908290620000a9906000906020850190620000ca565b508051620000bf906001906020840190620000ca565b5050505050620002e4565b828054620000d890620002a7565b90600052602060002090601f016020900481019282620000fc576000855562000147565b82601f106200011757805160ff191683800117855562000147565b8280016001018555821562000147579182015b82811115620001475782518255916020019190600101906200012a565b506200015592915062000159565b5090565b5b808211156200015557600081556001016200015a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019857600080fd5b81516001600160401b0380821115620001b557620001b562000170565b604051601f8301601f19908116603f01168101908282118183101715620001e057620001e062000170565b81604052838152602092508683858801011115620001fd57600080fd5b600091505b8382101562000221578582018301518183018401529082019062000202565b83821115620002335760008385830101525b9695505050505050565b600080604083850312156200025157600080fd5b82516001600160401b03808211156200026957600080fd5b620002778683870162000186565b935060208501519150808211156200028e57600080fd5b506200029d8582860162000186565b9150509250929050565b600181811c90821680620002bc57607f821691505b60208210811415620002de57634e487b7160e01b600052602260045260246000fd5b50919050565b61146280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101ec578063b88d4fde146101ff578063c87b56dd14610212578063e985e9c51461022557600080fd5b80636352211e146101b057806370a08231146101c357806395d89b41146101e457600080fd5b8063095ea7b3116100c8578063095ea7b31461016d5780631249c58b1461018257806323b872dd1461018a57806342842e0e1461019d57600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610e0e565b610253565b60405190151581526020015b60405180910390f35b61011f6102a5565b60405161010e9190610e5b565b61015561013a366004610e8e565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b61018061017b366004610ebe565b610333565b005b61018061041a565b610180610198366004610ee8565b61043b565b6101806101ab366004610ee8565b610602565b6101556101be366004610e8e565b6106fa565b6101d66101d1366004610f24565b610751565b60405190815260200161010e565b61011f6107b4565b6101806101fa366004610f3f565b6107c1565b61018061020d366004610f7b565b61082d565b61011f610220366004610e8e565b610915565b610102610233366004611016565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061028457506380ac58cd60e01b6001600160e01b03198316145b8061029f5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546102b290611049565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90611049565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061037c57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6103be5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600680546104399133919060006104308361109a565b919050556109cb565b565b6000818152600260205260409020546001600160a01b038481169116146104915760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103b5565b6001600160a01b0382166104db5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b336001600160a01b038416148061051557506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061053657506000818152600460205260409020546001600160a01b031633145b6105735760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016103b5565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61060d83838361043b565b6001600160a01b0382163b15806106b65750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906110b5565b6001600160e01b031916145b6106f55760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b505050565b6000818152600260205260409020546001600160a01b03168061074c5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103b5565b919050565b60006001600160a01b0382166107985760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103b5565b506001600160a01b031660009081526003602052604090205490565b600180546102b290611049565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61083885858561043b565b6001600160a01b0384163b15806108cf5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906108809033908a908990899089906004016110d2565b6020604051808303816000875af115801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c391906110b5565b6001600160e01b031916145b61090e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b5050505050565b60606000600761092430610ad6565b6008604051602001610938939291906111c0565b6040516020818303038152906040529050600061095482610aec565b60405160200161096491906111f3565b6040516020818303038152906040529050600061099f8260405160200161098b9190611231565b604051602081830303815290604052610aec565b9050806040516020016109b2919061130b565b60408051601f1981840301815291905295945050505050565b6001600160a01b038216610a155760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b6000818152600260205260409020546001600160a01b031615610a6b5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016103b5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606061029f6001600160a01b0383166014610c52565b6060815160001415610b0c57505060408051602081019091526000815290565b60006040518060600160405280604081526020016113ed6040913990506000600384516002610b3b9190611350565b610b459190611368565b610b5090600461138a565b90506000610b5f826020611350565b67ffffffffffffffff811115610b7757610b776113a9565b6040519080825280601f01601f191660200182016040528015610ba1576020820181803683370190505b509050818152600183018586518101602084015b81831015610c0d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610bb5565b600389510660018114610c275760028114610c3857610c44565b613d3d60f01b600119830152610c44565b603d60f81b6000198301525b509398975050505050505050565b60606000610c6183600261138a565b610c6c906002611350565b67ffffffffffffffff811115610c8457610c846113a9565b6040519080825280601f01601f191660200182016040528015610cae576020820181803683370190505b509050600360fc1b81600081518110610cc957610cc96113bf565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610cf857610cf86113bf565b60200101906001600160f81b031916908160001a9053506000610d1c84600261138a565b610d27906001611350565b90505b6001811115610d9f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610d5b57610d5b6113bf565b1a60f81b828281518110610d7157610d716113bf565b60200101906001600160f81b031916908160001a90535060049490941c93610d98816113d5565b9050610d2a565b508315610dee5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103b5565b9392505050565b6001600160e01b031981168114610e0b57600080fd5b50565b600060208284031215610e2057600080fd5b8135610dee81610df5565b60005b83811015610e46578181015183820152602001610e2e565b83811115610e55576000848401525b50505050565b6020815260008251806020840152610e7a816040850160208701610e2b565b601f01601f19169190910160400192915050565b600060208284031215610ea057600080fd5b5035919050565b80356001600160a01b038116811461074c57600080fd5b60008060408385031215610ed157600080fd5b610eda83610ea7565b946020939093013593505050565b600080600060608486031215610efd57600080fd5b610f0684610ea7565b9250610f1460208501610ea7565b9150604084013590509250925092565b600060208284031215610f3657600080fd5b610dee82610ea7565b60008060408385031215610f5257600080fd5b610f5b83610ea7565b915060208301358015158114610f7057600080fd5b809150509250929050565b600080600080600060808688031215610f9357600080fd5b610f9c86610ea7565b9450610faa60208701610ea7565b935060408601359250606086013567ffffffffffffffff80821115610fce57600080fd5b818801915088601f830112610fe257600080fd5b813581811115610ff157600080fd5b89602082850101111561100357600080fd5b9699959850939650602001949392505050565b6000806040838503121561102957600080fd5b61103283610ea7565b915061104060208401610ea7565b90509250929050565b600181811c9082168061105d57607f821691505b6020821081141561107e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156110ae576110ae611084565b5060010190565b6000602082840312156110c757600080fd5b8151610dee81610df5565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b8054600090600181811c908083168061114057607f831692505b602080841082141561116257634e487b7160e01b600052602260045260246000fd5b8180156111765760018114611187576111b4565b60ff198616895284890196506111b4565b60008881526020902060005b868110156111ac5781548b820152908501908301611193565b505084890196505b50505050505092915050565b60006111cc8286611126565b84516111dc818360208901610e2b565b6111e881830186611126565b979650505050505050565b7519185d184e9d195e1d0bda1d1b5b0ed8985cd94d8d0b60521b815260008251611224816016850160208701610e2b565b9190910160160192915050565b7f7b226e616d65223a20224e465420576562736572766572222c2022646573637281527f697074696f6e223a202254686973204e46542073657276657320616e2068746d60208201527f6c207061676520746861742063616e206265207573656420746f206d696e742060408201527f6d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e60608201526d171116101134b6b0b3b2911d101160911b6080820152600082516112f281608e850160208701610e2b565b61227d60f01b608e939091019283015250609001919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161134381601d850160208701610e2b565b91909101601d0192915050565b6000821982111561136357611363611084565b500190565b60008261138557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113a4576113a4611084565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816113e4576113e4611084565b50600019019056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220674d5687dc74224a149073966c6cf54cda0e181baa4731123501cb2f604eee9364736f6c634300080a0033223b206c65742070726f76696465723b206966202877696e646f772e657468657265756d29207b20636f6e736f6c652e6c6f672822646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e5765623350726f7669646572282077696e646f772e657468657265756d2c2022616e792220293b207d20656c7365207b20636f6e736f6c652e6c6f6728226e6f7420646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e4a736f6e52706350726f766964657228202268747470733a2f2f636c6f7564666c6172652d6574682e636f6d2f2220293b207d20747279207b20636f6e7374206163636f756e7473203d2061776169742077696e646f772e657468657265756d2e72657175657374287b206d6574686f643a20226574685f726571756573744163636f756e7473222c207d293b20636f6e736f6c652e6c6f67286163636f756e7473293b206c657420636f6e6e656374656457616c6c6574203d2028646f63756d656e742e717565727953656c6563746f7228202223636f6e6e656374656457616c6c65742220292e696e6e657248544d4c203d206163636f756e7473293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a20636f6e7472616374416464726573732c20646174613a202230783132343963353862222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a2022307834393736666230334333326535423863666532623663434233316330394261373845426142613431222c20646174613a20223078336233623537646562663037346661613133386237326336356164626463666233323938343765346632633034626465376637646437666361643561353264326633393561353538222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d206c6574206f7574707574203d2061776169742070726f76696465722e676574426c6f636b4e756d62657228293b206c657420646976203d2028646f63756d656e742e717565727953656c6563746f722822236e756d62657222292e696e6e657248544d4c203d206f7574707574293b207d2928293b207d293b203c2f7363726970743e203c7469746c653e576562736974653c2f7469746c653e203c2f686561643e203c626f64793e203c6469762069643d22636f6e6e656374656457616c6c6574223e4e6f2077616c6c65742064657465637465642e3c2f6469763e203c6469763e203c696e70757420747970653d22627574746f6e222076616c75653d226d696e7422202f3e203c2f6469763e203c2f626f64793e203c7374796c653e20626f6479207b20646973706c61793a20666c65783b20666c65782d666c6f773a20636f6c756d6e206e6f777261703b20616c69676e2d6974656d733a2063656e7465723b207d20626f6479203e20646976207b2070616464696e673a20313470783b207d203c2f7374796c653e203c2f68746d6c3e3c21444f43545950452068746d6c3e203c68746d6c206c616e673d22656e223e203c686561643e203c6d65746120636861727365743d225554462d3822202f3e203c6d657461206e616d653d2276696577706f72742220636f6e74656e743d2277696474683d6465766963652d77696474682c20696e697469616c2d7363616c653d312e3022202f3e203c6d65746120687474702d65717569763d22582d55412d436f6d70617469626c652220636f6e74656e743d2269653d6564676522202f3e203c73637269707420747970653d226d6f64756c65223e20696d706f7274207b20657468657273207d2066726f6d202268747470733a2f2f63646e2d636f72732e6574686572732e696f2f6c69622f6574686572732d352e352e342e65736d2e6d696e2e6a73223b2077696e646f772e6164644576656e744c697374656e657228226c6f6164222c2066756e6374696f6e202829207b20286173796e63202829203d3e207b206c657420636f6e747261637441646472657373203d20223c21444f43545950452068746d6c3e3c68746d6c206c616e673d27656e273e3c686561643e3c6d65746120636861727365743d275554462d3827202f3e3c6d657461206e616d653d2776696577706f72742720636f6e74656e743d2777696474683d6465766963652d77696474682c20696e697469616c2d7363616c653d312e3027202f3e3c6d65746120687474702d65717569763d27582d55412d436f6d70617469626c652720636f6e74656e743d2769653d6564676527202f3e3c73637269707420747970653d276d6f64756c65273e20696d706f7274207b20657468657273207d2066726f6d202768747470733a2f2f63646e2d636f72732e6574686572732e696f2f6c69622f6574686572732d352e352e342e65736d2e6d696e2e6a73273b20286173796e63202829203d3e207b206c657420636f6e747261637441646472657373203d2027273b6c65742070726f76696465723b206966202877696e646f772e657468657265756d29207b20636f6e736f6c652e6c6f672827646574656374656427293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e5765623350726f76696465722877696e646f772e657468657265756d2c2027616e7927293b207d20656c7365207b20636f6e736f6c652e6c6f6728276e6f7420646574656374656427293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e4a736f6e52706350726f7669646572282768747470733a2f2f636c6f7564666c6172652d6574682e636f6d2f27293b207d207472797b20636f6e7374206163636f756e7473203d2061776169742077696e646f772e657468657265756d2e72657175657374287b206d6574686f643a20276574685f726571756573744163636f756e7473272c207d293b20636f6e736f6c652e6c6f67286163636f756e7473293b206c657420636f6e6e656374656457616c6c6574203d20646f63756d656e742e717565727953656c6563746f72282723636f6e6e656374656457616c6c657427292e696e6e657248544d4c3d6163636f756e74733b207d206361746368286572726f72297b20636f6e736f6c652e6c6f6728276572726f7220636f6e6e656374696e672729207d207472797b206c6574207478203d2061776169742070726f76696465722e63616c6c287b202f2f20454e53207075626c6963207265736f6c766572206164647265737320746f3a2027307834393736666230334333326535423863666532623663434233316330394261373845426142613431272c202f2f206066756e6374696f6e2061646472286e616d656861736828277269636d6f6f2e65746827292920766965772072657475726e73202861646472657373296020646174613a2027307833623362353764656266303734666161313338623732633635616462646366623332393834376534663263303462646537663764643766636164356135326432663339356135353827207d293b20636f6e736f6c652e6c6f67287478293b202f2f2070726f76696465722e73656e645472616e73616374696f6e287b202f2f20746f3a20276e6e6e6e6963686f6c61732e657468272c202f2f206d6574686f643a27272c202f2f20706172616d733a27272c202f2f2076616c75653a206574686572732e7574696c732e706172736545746865722827302e30312729202f2f207d29207d6361746368286572726f72297b20636f6e736f6c652e6c6f6728276572726f7220636f6e6e656374696e6727293b207d206c6574206f7574707574203d2061776169742070726f76696465722e676574426c6f636b4e756d62657228293b206c657420646976203d20646f63756d656e742e717565727953656c6563746f722827236e756d62657227292e696e6e657248544d4c203d206f75747075743b202f2f20636f6e7374207369676e6572203d2070726f76696465722e6765745369676e657228293b202f2f20636f6e7374207478203d207369676e65722e73656e645472616e73616374696f6e287b202f2f20746f3a20276e6e6e6e6963686f6c61732e657468272c202f2f2076616c75653a206574686572732e7574696c732e706172736545746865722827302e30312729202f2f207d293b207d2928293b203c2f7363726970743e3c7469746c653e576562736974653c2f7469746c653e3c2f686561643e3c626f64793e3c6469763e3c2f6469763e3c6469762069643d27636f6e6e656374656457616c6c6574273e4e6f2077616c6c65742064657465637465642e3c2f6469763e3c6469763e3c696e70757420747970653d27627574746f6e272076616c75653d276d696e74273e3c2f696e7075743e3c2f6469763e3c2f626f64793e3c7374796c653e626f64797b646973706c61793a666c65783b666c65782d666c6f773a636f6c756d6e206e6f777261703b616c69676e2d6974656d733a63656e7465727d626f64793e6469767b70616464696e673a313470787d3c2f7374796c653e3c2f68746d6c3e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212205be1358f09231cf72f375f1ca11bbcc1b0b86756fe7589695ffa56717c1daa3364736f6c634300080a0033",
    "sourceMap": "180:3141:6:-:0;;;1572:26:1;;;-1:-1:-1;;1572:26:1;1594:4;1572:26;;;180:3141:6;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80630a9254e414620000635780639642ddaf146200006f578063b5b346031462000079578063ba414fa61462000083578063fa7626d414620000a1575b600080fd5b6200006d620000af565b005b6200006d62000146565b6200006d620001b2565b6200008d620003d5565b604051901515815260200160405180910390f35b6000546200008d9060ff1681565b604051620000bd906200094f565b6040808252600e908201526d37333a103bb2b11039b2b93b32b960911b60608201526080602082018190526006908201526527232a2ba2a160d11b60a082015260c001604051809103906000f0801580156200011d573d6000803e3d6000fd5b50600060026101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b600060029054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200019757600080fd5b505af1158015620001ac573d6000803e3d6000fd5b50505050565b620001bc62000146565b600060405180610180016040528061014a815260200162002baa61014a9139905060006040518061062001604052806105e7815260200162002cf46105e791399050600082600060029054906101000a90046001600160a01b0316836040516020016200022c939291906200098c565b604051602081830303815290604052905060006200024a826200050a565b6040516020016200025c9190620009dc565b604051602081830303815290604052905060006200029b8260405160200162000286919062000a1c565b6040516020818303038152906040526200050a565b905080604051602001620002b0919062000af8565b60408051808303601f19018152908290526000805463c87b56dd60e01b845260048401919091529092506200034791620100009091046001600160a01b03169063c87b56dd90602401600060405180830381865afa15801562000317573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000341919081019062000b55565b62000684565b6000805460405163c87b56dd60e01b81526004810192909252620003ce91620100009091046001600160a01b03169063c87b56dd90602401600060405180830381865afa1580156200039d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003c7919081019062000b55565b82620006ce565b5050505050565b60008054610100900460ff1615620003f65750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620005055760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000487917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000c0e565b60408051601f1981840301815290829052620004a39162000c41565b6000604051808303816000865af19150503d8060008114620004e2576040519150601f19603f3d011682016040523d82523d6000602084013e620004e7565b606091505b509150508080602001905181019062000501919062000c5f565b9150505b919050565b60608151600014156200052b57505060408051602081019091526000815290565b6000604051806060016040528060408152602001620032db60409139905060006003845160026200055d919062000ca0565b62000569919062000cbb565b6200057690600462000cde565b905060006200058782602062000ca0565b67ffffffffffffffff811115620005a257620005a262000b3f565b6040519080825280601f01601f191660200182016040528015620005cd576020820181803683370190505b509050818152600183018586518101602084015b818310156200063b576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101620005e1565b6003895106600181146200065857600281146200066a5762000676565b613d3d60f01b60011983015262000676565b603d60f81b6000198301525b509398975050505050505050565b620006cb816040516024016200069b919062000d2e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526200081b565b50565b80604051602001620006e1919062000c41565b60405160208183030381529060405280519060200120826040516020016200070a919062000c41565b604051602081830303815290604052805190602001201462000817577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620007939060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620007cc919062000d43565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35838260405162000805919062000d79565b60405180910390a1620008176200083c565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200093e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620008d9929160200162000c0e565b60408051601f1981840301815290829052620008f59162000c41565b6000604051808303816000865af19150503d806000811462000934576040519150601f19603f3d011682016040523d82523d6000602084013e62000939565b606091505b505050505b6000805461ff001916610100179055565b611dfa8062000db083390190565b60005b838110156200097a57818101518382015260200162000960565b83811115620001ac5750506000910152565b60008451620009a08184602089016200095d565b606085901b6bffffffffffffffffffffffff19169083019081528351620009cf8160148401602088016200095d565b0160140195945050505050565b7519185d184e9d195e1d0bda1d1b5b0ed8985cd94d8d0b60521b81526000825162000a0f8160168501602087016200095d565b9190910160160192915050565b7f7b226e616d65223a20224e465420576562736572766572222c2022646573637281527f697074696f6e223a202254686973204e46542073657276657320616e2068746d60208201527f6c207061676520746861742063616e206265207573656420746f206d696e742060408201527f6d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e60608201526d171116101134b6b0b3b2911d101160911b60808201526000825162000adf81608e8501602087016200095d565b61227d60f01b608e939091019283015250609001919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825162000b3281601d8501602087016200095d565b91909101601d0192915050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562000b6857600080fd5b815167ffffffffffffffff8082111562000b8157600080fd5b818401915084601f83011262000b9657600080fd5b81518181111562000bab5762000bab62000b3f565b604051601f8201601f19908116603f0116810190838211818310171562000bd65762000bd662000b3f565b8160405282815287602084870101111562000bf057600080fd5b62000c038360208301602088016200095d565b979650505050505050565b6001600160e01b031983168152815160009062000c338160048501602087016200095d565b919091016004019392505050565b6000825162000c558184602087016200095d565b9190910192915050565b60006020828403121562000c7257600080fd5b8151801515811462000c8357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111562000cb65762000cb662000c8a565b500190565b60008262000cd957634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161562000cfb5762000cfb62000c8a565b500290565b6000815180845262000d1a8160208601602086016200095d565b601f01601f19169290920160200192915050565b60208152600062000c83602083018462000d00565b60408152600a6040820152690808115e1c1958dd195960b21b606082015260806020820152600062000c83608083018462000d00565b60408152600a604082015269080808081058dd1d585b60b21b606082015260806020820152600062000c83608083018462000d0056fe61022060405261017e60808181529062001c7c60a03980516200002b91600791602090910190620000ca565b50604051806105600160405280610526815260200162001756610526913980516200005f91600891602090910190620000ca565b503480156200006d57600080fd5b5060405162001dfa38038062001dfa83398101604081905262000090916200023d565b815182908290620000a9906000906020850190620000ca565b508051620000bf906001906020840190620000ca565b5050505050620002e4565b828054620000d890620002a7565b90600052602060002090601f016020900481019282620000fc576000855562000147565b82601f106200011757805160ff191683800117855562000147565b8280016001018555821562000147579182015b82811115620001475782518255916020019190600101906200012a565b506200015592915062000159565b5090565b5b808211156200015557600081556001016200015a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019857600080fd5b81516001600160401b0380821115620001b557620001b562000170565b604051601f8301601f19908116603f01168101908282118183101715620001e057620001e062000170565b81604052838152602092508683858801011115620001fd57600080fd5b600091505b8382101562000221578582018301518183018401529082019062000202565b83821115620002335760008385830101525b9695505050505050565b600080604083850312156200025157600080fd5b82516001600160401b03808211156200026957600080fd5b620002778683870162000186565b935060208501519150808211156200028e57600080fd5b506200029d8582860162000186565b9150509250929050565b600181811c90821680620002bc57607f821691505b60208210811415620002de57634e487b7160e01b600052602260045260246000fd5b50919050565b61146280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101ec578063b88d4fde146101ff578063c87b56dd14610212578063e985e9c51461022557600080fd5b80636352211e146101b057806370a08231146101c357806395d89b41146101e457600080fd5b8063095ea7b3116100c8578063095ea7b31461016d5780631249c58b1461018257806323b872dd1461018a57806342842e0e1461019d57600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610e0e565b610253565b60405190151581526020015b60405180910390f35b61011f6102a5565b60405161010e9190610e5b565b61015561013a366004610e8e565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b61018061017b366004610ebe565b610333565b005b61018061041a565b610180610198366004610ee8565b61043b565b6101806101ab366004610ee8565b610602565b6101556101be366004610e8e565b6106fa565b6101d66101d1366004610f24565b610751565b60405190815260200161010e565b61011f6107b4565b6101806101fa366004610f3f565b6107c1565b61018061020d366004610f7b565b61082d565b61011f610220366004610e8e565b610915565b610102610233366004611016565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061028457506380ac58cd60e01b6001600160e01b03198316145b8061029f5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546102b290611049565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90611049565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061037c57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6103be5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600680546104399133919060006104308361109a565b919050556109cb565b565b6000818152600260205260409020546001600160a01b038481169116146104915760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103b5565b6001600160a01b0382166104db5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b336001600160a01b038416148061051557506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061053657506000818152600460205260409020546001600160a01b031633145b6105735760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016103b5565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61060d83838361043b565b6001600160a01b0382163b15806106b65750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906110b5565b6001600160e01b031916145b6106f55760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b505050565b6000818152600260205260409020546001600160a01b03168061074c5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103b5565b919050565b60006001600160a01b0382166107985760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103b5565b506001600160a01b031660009081526003602052604090205490565b600180546102b290611049565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61083885858561043b565b6001600160a01b0384163b15806108cf5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906108809033908a908990899089906004016110d2565b6020604051808303816000875af115801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c391906110b5565b6001600160e01b031916145b61090e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b5050505050565b60606000600761092430610ad6565b6008604051602001610938939291906111c0565b6040516020818303038152906040529050600061095482610aec565b60405160200161096491906111f3565b6040516020818303038152906040529050600061099f8260405160200161098b9190611231565b604051602081830303815290604052610aec565b9050806040516020016109b2919061130b565b60408051601f1981840301815291905295945050505050565b6001600160a01b038216610a155760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b6000818152600260205260409020546001600160a01b031615610a6b5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016103b5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606061029f6001600160a01b0383166014610c52565b6060815160001415610b0c57505060408051602081019091526000815290565b60006040518060600160405280604081526020016113ed6040913990506000600384516002610b3b9190611350565b610b459190611368565b610b5090600461138a565b90506000610b5f826020611350565b67ffffffffffffffff811115610b7757610b776113a9565b6040519080825280601f01601f191660200182016040528015610ba1576020820181803683370190505b509050818152600183018586518101602084015b81831015610c0d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610bb5565b600389510660018114610c275760028114610c3857610c44565b613d3d60f01b600119830152610c44565b603d60f81b6000198301525b509398975050505050505050565b60606000610c6183600261138a565b610c6c906002611350565b67ffffffffffffffff811115610c8457610c846113a9565b6040519080825280601f01601f191660200182016040528015610cae576020820181803683370190505b509050600360fc1b81600081518110610cc957610cc96113bf565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610cf857610cf86113bf565b60200101906001600160f81b031916908160001a9053506000610d1c84600261138a565b610d27906001611350565b90505b6001811115610d9f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610d5b57610d5b6113bf565b1a60f81b828281518110610d7157610d716113bf565b60200101906001600160f81b031916908160001a90535060049490941c93610d98816113d5565b9050610d2a565b508315610dee5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103b5565b9392505050565b6001600160e01b031981168114610e0b57600080fd5b50565b600060208284031215610e2057600080fd5b8135610dee81610df5565b60005b83811015610e46578181015183820152602001610e2e565b83811115610e55576000848401525b50505050565b6020815260008251806020840152610e7a816040850160208701610e2b565b601f01601f19169190910160400192915050565b600060208284031215610ea057600080fd5b5035919050565b80356001600160a01b038116811461074c57600080fd5b60008060408385031215610ed157600080fd5b610eda83610ea7565b946020939093013593505050565b600080600060608486031215610efd57600080fd5b610f0684610ea7565b9250610f1460208501610ea7565b9150604084013590509250925092565b600060208284031215610f3657600080fd5b610dee82610ea7565b60008060408385031215610f5257600080fd5b610f5b83610ea7565b915060208301358015158114610f7057600080fd5b809150509250929050565b600080600080600060808688031215610f9357600080fd5b610f9c86610ea7565b9450610faa60208701610ea7565b935060408601359250606086013567ffffffffffffffff80821115610fce57600080fd5b818801915088601f830112610fe257600080fd5b813581811115610ff157600080fd5b89602082850101111561100357600080fd5b9699959850939650602001949392505050565b6000806040838503121561102957600080fd5b61103283610ea7565b915061104060208401610ea7565b90509250929050565b600181811c9082168061105d57607f821691505b6020821081141561107e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156110ae576110ae611084565b5060010190565b6000602082840312156110c757600080fd5b8151610dee81610df5565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b8054600090600181811c908083168061114057607f831692505b602080841082141561116257634e487b7160e01b600052602260045260246000fd5b8180156111765760018114611187576111b4565b60ff198616895284890196506111b4565b60008881526020902060005b868110156111ac5781548b820152908501908301611193565b505084890196505b50505050505092915050565b60006111cc8286611126565b84516111dc818360208901610e2b565b6111e881830186611126565b979650505050505050565b7519185d184e9d195e1d0bda1d1b5b0ed8985cd94d8d0b60521b815260008251611224816016850160208701610e2b565b9190910160160192915050565b7f7b226e616d65223a20224e465420576562736572766572222c2022646573637281527f697074696f6e223a202254686973204e46542073657276657320616e2068746d60208201527f6c207061676520746861742063616e206265207573656420746f206d696e742060408201527f6d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e60608201526d171116101134b6b0b3b2911d101160911b6080820152600082516112f281608e850160208701610e2b565b61227d60f01b608e939091019283015250609001919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161134381601d850160208701610e2b565b91909101601d0192915050565b6000821982111561136357611363611084565b500190565b60008261138557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113a4576113a4611084565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816113e4576113e4611084565b50600019019056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220674d5687dc74224a149073966c6cf54cda0e181baa4731123501cb2f604eee9364736f6c634300080a0033223b206c65742070726f76696465723b206966202877696e646f772e657468657265756d29207b20636f6e736f6c652e6c6f672822646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e5765623350726f7669646572282077696e646f772e657468657265756d2c2022616e792220293b207d20656c7365207b20636f6e736f6c652e6c6f6728226e6f7420646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e4a736f6e52706350726f766964657228202268747470733a2f2f636c6f7564666c6172652d6574682e636f6d2f2220293b207d20747279207b20636f6e7374206163636f756e7473203d2061776169742077696e646f772e657468657265756d2e72657175657374287b206d6574686f643a20226574685f726571756573744163636f756e7473222c207d293b20636f6e736f6c652e6c6f67286163636f756e7473293b206c657420636f6e6e656374656457616c6c6574203d2028646f63756d656e742e717565727953656c6563746f7228202223636f6e6e656374656457616c6c65742220292e696e6e657248544d4c203d206163636f756e7473293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a20636f6e7472616374416464726573732c20646174613a202230783132343963353862222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a2022307834393736666230334333326535423863666532623663434233316330394261373845426142613431222c20646174613a20223078336233623537646562663037346661613133386237326336356164626463666233323938343765346632633034626465376637646437666361643561353264326633393561353538222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d206c6574206f7574707574203d2061776169742070726f76696465722e676574426c6f636b4e756d62657228293b206c657420646976203d2028646f63756d656e742e717565727953656c6563746f722822236e756d62657222292e696e6e657248544d4c203d206f7574707574293b207d2928293b207d293b203c2f7363726970743e203c7469746c653e576562736974653c2f7469746c653e203c2f686561643e203c626f64793e203c6469762069643d22636f6e6e656374656457616c6c6574223e4e6f2077616c6c65742064657465637465642e3c2f6469763e203c6469763e203c696e70757420747970653d22627574746f6e222076616c75653d226d696e7422202f3e203c2f6469763e203c2f626f64793e203c7374796c653e20626f6479207b20646973706c61793a20666c65783b20666c65782d666c6f773a20636f6c756d6e206e6f777261703b20616c69676e2d6974656d733a2063656e7465723b207d20626f6479203e20646976207b2070616464696e673a20313470783b207d203c2f7374796c653e203c2f68746d6c3e3c21444f43545950452068746d6c3e203c68746d6c206c616e673d22656e223e203c686561643e203c6d65746120636861727365743d225554462d3822202f3e203c6d657461206e616d653d2276696577706f72742220636f6e74656e743d2277696474683d6465766963652d77696474682c20696e697469616c2d7363616c653d312e3022202f3e203c6d65746120687474702d65717569763d22582d55412d436f6d70617469626c652220636f6e74656e743d2269653d6564676522202f3e203c73637269707420747970653d226d6f64756c65223e20696d706f7274207b20657468657273207d2066726f6d202268747470733a2f2f63646e2d636f72732e6574686572732e696f2f6c69622f6574686572732d352e352e342e65736d2e6d696e2e6a73223b2077696e646f772e6164644576656e744c697374656e657228226c6f6164222c2066756e6374696f6e202829207b20286173796e63202829203d3e207b206c657420636f6e747261637441646472657373203d20223c21444f43545950452068746d6c3e3c68746d6c206c616e673d27656e273e3c686561643e3c6d65746120636861727365743d275554462d3827202f3e3c6d657461206e616d653d2776696577706f72742720636f6e74656e743d2777696474683d6465766963652d77696474682c20696e697469616c2d7363616c653d312e3027202f3e3c6d65746120687474702d65717569763d27582d55412d436f6d70617469626c652720636f6e74656e743d2769653d6564676527202f3e3c73637269707420747970653d276d6f64756c65273e20696d706f7274207b20657468657273207d2066726f6d202768747470733a2f2f63646e2d636f72732e6574686572732e696f2f6c69622f6574686572732d352e352e342e65736d2e6d696e2e6a73273b20286173796e63202829203d3e207b206c657420636f6e747261637441646472657373203d2027273b6c65742070726f76696465723b206966202877696e646f772e657468657265756d29207b20636f6e736f6c652e6c6f672827646574656374656427293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e5765623350726f76696465722877696e646f772e657468657265756d2c2027616e7927293b207d20656c7365207b20636f6e736f6c652e6c6f6728276e6f7420646574656374656427293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e4a736f6e52706350726f7669646572282768747470733a2f2f636c6f7564666c6172652d6574682e636f6d2f27293b207d207472797b20636f6e7374206163636f756e7473203d2061776169742077696e646f772e657468657265756d2e72657175657374287b206d6574686f643a20276574685f726571756573744163636f756e7473272c207d293b20636f6e736f6c652e6c6f67286163636f756e7473293b206c657420636f6e6e656374656457616c6c6574203d20646f63756d656e742e717565727953656c6563746f72282723636f6e6e656374656457616c6c657427292e696e6e657248544d4c3d6163636f756e74733b207d206361746368286572726f72297b20636f6e736f6c652e6c6f6728276572726f7220636f6e6e656374696e672729207d207472797b206c6574207478203d2061776169742070726f76696465722e63616c6c287b202f2f20454e53207075626c6963207265736f6c766572206164647265737320746f3a2027307834393736666230334333326535423863666532623663434233316330394261373845426142613431272c202f2f206066756e6374696f6e2061646472286e616d656861736828277269636d6f6f2e65746827292920766965772072657475726e73202861646472657373296020646174613a2027307833623362353764656266303734666161313338623732633635616462646366623332393834376534663263303462646537663764643766636164356135326432663339356135353827207d293b20636f6e736f6c652e6c6f67287478293b202f2f2070726f76696465722e73656e645472616e73616374696f6e287b202f2f20746f3a20276e6e6e6e6963686f6c61732e657468272c202f2f206d6574686f643a27272c202f2f20706172616d733a27272c202f2f2076616c75653a206574686572732e7574696c732e706172736545746865722827302e30312729202f2f207d29207d6361746368286572726f72297b20636f6e736f6c652e6c6f6728276572726f7220636f6e6e656374696e6727293b207d206c6574206f7574707574203d2061776169742070726f76696465722e676574426c6f636b4e756d62657228293b206c657420646976203d20646f63756d656e742e717565727953656c6563746f722827236e756d62657227292e696e6e657248544d4c203d206f75747075743b202f2f20636f6e7374207369676e6572203d2070726f76696465722e6765745369676e657228293b202f2f20636f6e7374207478203d207369676e65722e73656e645472616e73616374696f6e287b202f2f20746f3a20276e6e6e6e6963686f6c61732e657468272c202f2f2076616c75653a206574686572732e7574696c732e706172736545746865722827302e30312729202f2f207d293b207d2928293b203c2f7363726970743e3c7469746c653e576562736974653c2f7469746c653e3c2f686561643e3c626f64793e3c6469763e3c2f6469763e3c6469762069643d27636f6e6e656374656457616c6c6574273e4e6f2077616c6c65742064657465637465642e3c2f6469763e3c6469763e3c696e70757420747970653d27627574746f6e272076616c75653d276d696e74273e3c2f696e7075743e3c2f6469763e3c2f626f64793e3c7374796c653e626f64797b646973706c61793a666c65783b666c65782d666c6f773a636f6c756d6e206e6f777261703b616c69676e2d6974656d733a63656e7465727d626f64793e6469767b70616464696e673a313470787d3c2f7374796c653e3c2f68746d6c3e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa26469706673582212205be1358f09231cf72f375f1ca11bbcc1b0b86756fe7589695ffa56717c1daa3364736f6c634300080a0033",
    "sourceMap": "180:3141:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:85;;;:::i;:::-;;326:52;;;:::i;384:2935::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;179:14:8;;172:22;154:41;;142:2;127:18;1819:584:1;;;;;;;1572:26;;;;;;;;;235:85:6;273:40;;;;;:::i;:::-;509:2:8;491:21;;;548:2;528:18;;;521:30;-1:-1:-1;;;582:2:8;567:18;;560:44;642:3;635:4;620:20;;613:33;;;683:1;662:19;;;655:30;-1:-1:-1;;;716:3:8;701:19;;694:37;763:3;748:19;273:40:6;;;;;;;;;;;;;;;;;;;;;;;269:1;;:44;;;;;-1:-1:-1;;;;;269:44:6;;;;;-1:-1:-1;;;;;269:44:6;;;;;;235:85::o;326:52::-;363:1;;;;;;;;;-1:-1:-1;;;;;363:1:6;-1:-1:-1;;;;;363:6:6;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:52::o;384:2935::-;425:10;:8;:10::i;:::-;473:31;:366;;;;;;;;;;;;;;;;;;;849:31;:1547;;;;;;;;;;;;;;;;;;;2406:18;2451:5;2466:1;;;;;;;;;-1:-1:-1;;;;;2466:1:6;2470:5;2434:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2406:71;;2487:21;2607:26;2627:4;2607:13;:26::i;:::-;2531:116;;;;;;;;:::i;:::-;;;;;;;;;;;;;2487:170;;2685:18;2706:391;2996:7;2784:271;;;;;;;;:::i;:::-;;;;;;;;;;;;;2706:13;:391::i;:::-;2685:412;;3204:4;3154:55;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;3154:55:6;;;;;;;3259:1;;;-1:-1:-1;;;3259:13:6;;;;;3646:25:8;;;;3154:55:6;;-1:-1:-1;3247:26:6;;3259:1;;;;-1:-1:-1;;;;;3259:1:6;;:10;;3619:18:8;;3259:13:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3259:13:6;;;;;;;;;;;;:::i;:::-;3247:11;:26::i;:::-;3292:1;;;:13;;-1:-1:-1;;;3292:13:6;;;;;3646:25:8;;;;3283:29:6;;3292:1;;;;-1:-1:-1;;;;;3292:1:6;;:10;;3619:18:8;;3292:13:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3292:13:6;;;;;;;;;;;;:::i;:::-;3307:4;3283:8;:29::i;:::-;415:2904;;;;;384:2935::o;1819:584:1:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;4877:51:8;;;-1:-1:-1;;;4944:18:8;;;4937:34;2196:43:1;;;;;;;;;4850:18:8;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:1;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;777:1861:0:-;835:13;864:4;:11;879:1;864:16;860:31;;;-1:-1:-1;;882:9:0;;;;;;;;;-1:-1:-1;882:9:0;;;777:1861::o;860:31::-;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1050:4;:11;1064:1;1050:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:27;;:1;:27;:::i;:::-;1023:48;-1:-1:-1;1151:20:0;1185:15;1023:48;1198:2;1185:15;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1174:27:0;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;-1:-1:-1;2378:1:0;2363:17;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;-1:-1:-1;;;;;2495:17:0;;2488:43;2479:54;;2546:52;-1:-1:-1;;;;;2562:17:0;;2555:41;2440:158;-1:-1:-1;2625:6:0;;777:1861;-1:-1:-1;;;;;;;;777:1861:0:o;5072:112:7:-;5121:59;5176:2;5137:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5137:42:7;;;;;;;;;;;;;;-1:-1:-1;;;;;5137:42:7;-1:-1:-1;;;5137:42:7;;;5121:15;:59::i;:::-;5072:112;:::o;14688:344:1:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;7550:2:8;7532:21;;;7589:2;7569:18;;;7562:30;7628:34;7623:2;7608:18;;7601:62;-1:-1:-1;;;7694:2:8;7679:18;;7672:34;7738:3;7723:19;;7348:400;14848:43:1;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;:::-;;;;;;;;15009:6;:4;:6::i;:::-;14688:344;;:::o;176:288:7:-;264:14;;129:42;373:2;360:16;;240:21;;264:14;360:16;129:42;400:5;389:68;380:77;;335:126;;176:288;:::o;2410:424:1:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;8869:51:8;;;-1:-1:-1;;;8936:18:8;;;8929:34;;;;2705:4:1;8979:18:8;;;8972:34;2482:11:1;;1671:64;2579:43;;8842:18:8;;2645:67:1;;;-1:-1:-1;;2645:67:1;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:1;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:1;2813:7;:14;;-1:-1:-1;;2813:14:1;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;778:258:8:-;850:1;860:113;874:6;871:1;868:13;860:113;;;950:11;;;944:18;931:11;;;924:39;896:2;889:10;860:113;;;991:6;988:1;985:13;982:48;;;-1:-1:-1;;1026:1:8;1008:16;;1001:27;778:258::o;1041:593::-;1248:3;1286:6;1280:13;1302:53;1348:6;1343:3;1336:4;1328:6;1324:17;1302:53;:::i;:::-;1424:2;1420:15;;;-1:-1:-1;;1416:53:8;1377:16;;;1402:68;;;1495:13;;1517:66;1495:13;1569:2;1558:14;;1551:4;1539:17;;1517:66;:::i;:::-;1603:20;1625:2;1599:29;;1041:593;-1:-1:-1;;;;;1041:593:8:o;1639:441::-;-1:-1:-1;;;1896:3:8;1889:37;1871:3;1955:6;1949:13;1971:62;2026:6;2021:2;2016:3;2012:12;2005:4;1997:6;1993:17;1971:62;:::i;:::-;2053:16;;;;2071:2;2049:25;;1639:441;-1:-1:-1;;1639:441:8:o;2085:949::-;2448:66;2443:3;2436:79;2545:66;2540:2;2535:3;2531:12;2524:88;2642:34;2637:2;2632:3;2628:12;2621:56;2707:34;2702:2;2697:3;2693:12;2686:56;2782:30;2777:3;2773:40;2767:3;2762;2758:13;2751:63;2418:3;2843:6;2837:13;2859:61;2913:6;2907:3;2902;2898:13;2893:2;2885:6;2881:15;2859:61;:::i;:::-;-1:-1:-1;;;2979:3:8;2939:16;;;;2971:12;;;2964:36;-1:-1:-1;3024:3:8;3016:12;;2085:949;-1:-1:-1;2085:949:8:o;3039:448::-;3301:31;3296:3;3289:44;3271:3;3362:6;3356:13;3378:62;3433:6;3428:2;3423:3;3419:12;3412:4;3404:6;3400:17;3378:62;:::i;:::-;3460:16;;;;3478:2;3456:25;;3039:448;-1:-1:-1;;3039:448:8:o;3682:127::-;3743:10;3738:3;3734:20;3731:1;3724:31;3774:4;3771:1;3764:15;3798:4;3795:1;3788:15;3814:884;3894:6;3947:2;3935:9;3926:7;3922:23;3918:32;3915:52;;;3963:1;3960;3953:12;3915:52;3996:9;3990:16;4025:18;4066:2;4058:6;4055:14;4052:34;;;4082:1;4079;4072:12;4052:34;4120:6;4109:9;4105:22;4095:32;;4165:7;4158:4;4154:2;4150:13;4146:27;4136:55;;4187:1;4184;4177:12;4136:55;4216:2;4210:9;4238:2;4234;4231:10;4228:36;;;4244:18;;:::i;:::-;4319:2;4313:9;4287:2;4373:13;;-1:-1:-1;;4369:22:8;;;4393:2;4365:31;4361:40;4349:53;;;4417:18;;;4437:22;;;4414:46;4411:72;;;4463:18;;:::i;:::-;4503:10;4499:2;4492:22;4538:2;4530:6;4523:18;4578:7;4573:2;4568;4564;4560:11;4556:20;4553:33;4550:53;;;4599:1;4596;4589:12;4550:53;4612:55;4664:2;4659;4651:6;4647:15;4642:2;4638;4634:11;4612:55;:::i;:::-;4686:6;3814:884;-1:-1:-1;;;;;;;3814:884:8:o;4982:371::-;-1:-1:-1;;;;;;5167:33:8;;5155:46;;5224:13;;5137:3;;5246:61;5224:13;5296:1;5287:11;;5280:4;5268:17;;5246:61;:::i;:::-;5327:16;;;;5345:1;5323:24;;4982:371;-1:-1:-1;;;4982:371:8:o;5358:274::-;5487:3;5525:6;5519:13;5541:53;5587:6;5582:3;5575:4;5567:6;5563:17;5541:53;:::i;:::-;5610:16;;;;;5358:274;-1:-1:-1;;5358:274:8:o;5637:277::-;5704:6;5757:2;5745:9;5736:7;5732:23;5728:32;5725:52;;;5773:1;5770;5763:12;5725:52;5805:9;5799:16;5858:5;5851:13;5844:21;5837:5;5834:32;5824:60;;5880:1;5877;5870:12;5824:60;5903:5;5637:277;-1:-1:-1;;;5637:277:8:o;5919:127::-;5980:10;5975:3;5971:20;5968:1;5961:31;6011:4;6008:1;6001:15;6035:4;6032:1;6025:15;6051:128;6091:3;6122:1;6118:6;6115:1;6112:13;6109:39;;;6128:18;;:::i;:::-;-1:-1:-1;6164:9:8;;6051:128::o;6184:217::-;6224:1;6250;6240:132;;6294:10;6289:3;6285:20;6282:1;6275:31;6329:4;6326:1;6319:15;6357:4;6354:1;6347:15;6240:132;-1:-1:-1;6386:9:8;;6184:217::o;6406:168::-;6446:7;6512:1;6508;6504:6;6500:14;6497:1;6494:21;6489:1;6482:9;6475:17;6471:45;6468:71;;;6519:18;;:::i;:::-;-1:-1:-1;6559:9:8;;6406:168::o;6579:258::-;6621:3;6659:5;6653:12;6686:6;6681:3;6674:19;6702:63;6758:6;6751:4;6746:3;6742:14;6735:4;6728:5;6724:16;6702:63;:::i;:::-;6819:2;6798:15;-1:-1:-1;;6794:29:8;6785:39;;;;6826:4;6781:50;;6579:258;-1:-1:-1;;6579:258:8:o;6842:220::-;6991:2;6980:9;6973:21;6954:4;7011:45;7052:2;7041:9;7037:18;7029:6;7011:45;:::i;7753:452::-;8003:2;7992:9;7985:21;8042:2;8037;8026:9;8022:18;8015:30;-1:-1:-1;;;8076:2:8;8065:9;8061:18;8054:40;8132:3;8125:4;8114:9;8110:20;8103:33;7966:4;8153:46;8194:3;8183:9;8179:19;8171:6;8153:46;:::i;8210:452::-;8460:2;8449:9;8442:21;8499:2;8494;8483:9;8479:18;8472:30;-1:-1:-1;;;8533:2:8;8522:9;8518:18;8511:40;8589:3;8582:4;8571:9;8567:20;8560:33;8423:4;8610:46;8651:3;8640:9;8636:19;8628:6;8610:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testMint()": "9642ddaf",
    "testTokenURI()": "b5b34603"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/Contract.t.sol\":\"ContractTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":base64/=lib/base64/\",\":brechtpd/base64/=lib/base64/\",\":ds-test/=lib/ds-test/src/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/base64/Base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"src/Contract.sol\":{\"keccak256\":\"0x160ef8b9a0573633fecedab524bba80ce1d712948a014254dfacdc43c3ab6e96\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b31e772b261732cabbadd2c3fefa0b754fb13ee9592a9e5ee14bee465b5f9f70\",\"dweb:/ipfs/QmeEWMs37tNhxJABb6c3AnVhvLBQeVMS73oebJro5j6AZN\"]},\"src/test/Contract.t.sol\":{\"keccak256\":\"0x71723e27695a1147f5860791b565017fab36527de1bc4898630ca7dbbde1c8eb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94bf49884240d52c955aa5c85a9c1cb64383d7feffa541d174f9837538ff29dc\",\"dweb:/ipfs/QmWh8Jm3jx14radfvfhM44Zo8aWwvQ2ytBwX9nUnkxJ5Be\"]},\"src/test/console.sol\":{\"keccak256\":\"0x5e1eb885d0baaab494256e1b7d32a380cc2ba74d6646d7e0d796177004c466ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5ec581424694df0f323d757cc6444706d79a395a850ff8d198f4514c4941662\",\"dweb:/ipfs/QmdhNZjSTjoTgn1mTnBfkPSeJAEBnh1bsv7GYzaa5CBKs9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":base64/=lib/base64/",
        ":brechtpd/base64/=lib/base64/",
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/Contract.t.sol": "ContractTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/base64/Base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Contract.sol": {
        "keccak256": "0x160ef8b9a0573633fecedab524bba80ce1d712948a014254dfacdc43c3ab6e96",
        "urls": [
          "bzz-raw://b31e772b261732cabbadd2c3fefa0b754fb13ee9592a9e5ee14bee465b5f9f70",
          "dweb:/ipfs/QmeEWMs37tNhxJABb6c3AnVhvLBQeVMS73oebJro5j6AZN"
        ],
        "license": "UNLICENSED"
      },
      "src/test/Contract.t.sol": {
        "keccak256": "0x71723e27695a1147f5860791b565017fab36527de1bc4898630ca7dbbde1c8eb",
        "urls": [
          "bzz-raw://94bf49884240d52c955aa5c85a9c1cb64383d7feffa541d174f9837538ff29dc",
          "dweb:/ipfs/QmWh8Jm3jx14radfvfhM44Zo8aWwvQ2ytBwX9nUnkxJ5Be"
        ],
        "license": "UNLICENSED"
      },
      "src/test/console.sol": {
        "keccak256": "0x5e1eb885d0baaab494256e1b7d32a380cc2ba74d6646d7e0d796177004c466ee",
        "urls": [
          "bzz-raw://b5ec581424694df0f323d757cc6444706d79a395a850ff8d198f4514c4941662",
          "dweb:/ipfs/QmdhNZjSTjoTgn1mTnBfkPSeJAEBnh1bsv7GYzaa5CBKs9"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/Contract.t.sol",
    "id": 3750,
    "exportedSymbols": {
      "Base64": [
        114
      ],
      "Contract": [
        3622
      ],
      "ContractTest": [
        3749
      ],
      "DSTest": [
        1901
      ],
      "ERC721": [
        3485
      ],
      "ERC721TokenReceiver": [
        3505
      ],
      "Math": [
        2941
      ],
      "Strings": [
        2076
      ],
      "console": [
        11813
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3283:6",
    "nodes": [
      {
        "id": 3624,
        "nodeType": "PragmaDirective",
        "src": "39:23:6",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 3625,
        "nodeType": "ImportDirective",
        "src": "64:26:6",
        "absolutePath": "lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3750,
        "sourceUnit": 1902,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3626,
        "nodeType": "ImportDirective",
        "src": "91:36:6",
        "absolutePath": "lib/base64/Base64.sol",
        "file": "brechtpd/base64/Base64.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3750,
        "sourceUnit": 115,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3627,
        "nodeType": "ImportDirective",
        "src": "128:25:6",
        "absolutePath": "src/Contract.sol",
        "file": "../Contract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3750,
        "sourceUnit": 3623,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3628,
        "nodeType": "ImportDirective",
        "src": "154:23:6",
        "absolutePath": "src/test/console.sol",
        "file": "./console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3750,
        "sourceUnit": 11814,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3749,
        "nodeType": "ContractDefinition",
        "src": "180:3141:6",
        "nodes": [
          {
            "id": 3633,
            "nodeType": "VariableDeclaration",
            "src": "218:10:6",
            "constant": false,
            "mutability": "mutable",
            "name": "c",
            "nameLocation": "227:1:6",
            "scope": 3749,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Contract_$3622",
              "typeString": "contract Contract"
            },
            "typeName": {
              "id": 3632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3631,
                "name": "Contract",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3622,
                "src": "218:8:6"
              },
              "referencedDeclaration": 3622,
              "src": "218:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contract_$3622",
                "typeString": "contract Contract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3646,
            "nodeType": "FunctionDefinition",
            "src": "235:85:6",
            "body": {
              "id": 3645,
              "nodeType": "Block",
              "src": "259:61:6",
              "statements": [
                {
                  "expression": {
                    "id": 3643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3636,
                      "name": "c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3633,
                      "src": "269:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Contract_$3622",
                        "typeString": "contract Contract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6e66742077656220736572766572",
                          "id": 3640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "286:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d3230b59690ad81bc38ed82c534288be21a5bc8cb6d734cff7e6e92f133b67d7",
                            "typeString": "literal_string \"nft web server\""
                          },
                          "value": "nft web server"
                        },
                        {
                          "hexValue": "4e4654574542",
                          "id": 3641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "304:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a9d2bfd026a21bdcd737c9c51d7b3305967c4f2bd4c83e13c88ace067388a09f",
                            "typeString": "literal_string \"NFTWEB\""
                          },
                          "value": "NFTWEB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d3230b59690ad81bc38ed82c534288be21a5bc8cb6d734cff7e6e92f133b67d7",
                            "typeString": "literal_string \"nft web server\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a9d2bfd026a21bdcd737c9c51d7b3305967c4f2bd4c83e13c88ace067388a09f",
                            "typeString": "literal_string \"NFTWEB\""
                          }
                        ],
                        "id": 3639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "273:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Contract_$3622_$",
                          "typeString": "function (string memory,string memory) returns (contract Contract)"
                        },
                        "typeName": {
                          "id": 3638,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3637,
                            "name": "Contract",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3622,
                            "src": "277:8:6"
                          },
                          "referencedDeclaration": 3622,
                          "src": "277:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Contract_$3622",
                            "typeString": "contract Contract"
                          }
                        }
                      },
                      "id": 3642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "273:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Contract_$3622",
                        "typeString": "contract Contract"
                      }
                    },
                    "src": "269:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Contract_$3622",
                      "typeString": "contract Contract"
                    }
                  },
                  "id": 3644,
                  "nodeType": "ExpressionStatement",
                  "src": "269:44:6"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "244:5:6",
            "parameters": {
              "id": 3634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:6"
            },
            "returnParameters": {
              "id": 3635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:6"
            },
            "scope": 3749,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3655,
            "nodeType": "FunctionDefinition",
            "src": "326:52:6",
            "body": {
              "id": 3654,
              "nodeType": "Block",
              "src": "353:25:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3649,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3633,
                        "src": "363:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Contract_$3622",
                          "typeString": "contract Contract"
                        }
                      },
                      "id": 3651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3546,
                      "src": "363:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 3652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:8:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3653,
                  "nodeType": "ExpressionStatement",
                  "src": "363:8:6"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "335:8:6",
            "parameters": {
              "id": 3647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:2:6"
            },
            "returnParameters": {
              "id": 3648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:6"
            },
            "scope": 3749,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3748,
            "nodeType": "FunctionDefinition",
            "src": "384:2935:6",
            "body": {
              "id": 3747,
              "nodeType": "Block",
              "src": "415:2904:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3658,
                      "name": "testMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3655,
                      "src": "425:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:10:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3660,
                  "nodeType": "ExpressionStatement",
                  "src": "425:10:6"
                },
                {
                  "assignments": [
                    3662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3662,
                      "mutability": "mutable",
                      "name": "html1",
                      "nameLocation": "499:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3747,
                      "src": "473:31:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3661,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "473:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3664,
                  "initialValue": {
                    "hexValue": "3c21444f43545950452068746d6c3e3c68746d6c206c616e673d27656e273e3c686561643e3c6d65746120636861727365743d275554462d3827202f3e3c6d657461206e616d653d2776696577706f72742720636f6e74656e743d2777696474683d6465766963652d77696474682c20696e697469616c2d7363616c653d312e3027202f3e3c6d65746120687474702d65717569763d27582d55412d436f6d70617469626c652720636f6e74656e743d2769653d6564676527202f3e3c73637269707420747970653d276d6f64756c65273e20696d706f7274207b20657468657273207d2066726f6d202768747470733a2f2f63646e2d636f72732e6574686572732e696f2f6c69622f6574686572732d352e352e342e65736d2e6d696e2e6a73273b20286173796e63202829203d3e207b206c657420636f6e747261637441646472657373203d2027",
                    "id": 3663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "507:332:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_081d0a0757f3ed4c25a34ea7d2b943416a0e7fd94347895c9317bfe440ceec48",
                      "typeString": "literal_string \"<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8' /><meta name='viewport' content='width=device-width, initial-scale=1.0' /><meta http-equiv='X-UA-Compatible' content='ie=edge' /><script type='module'> import { ethers } from 'https://cdn-cors.ethers.io/lib/ethers-5.5.4.esm.min.js'; (async () => { let contractAddress = '\""
                    },
                    "value": "<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8' /><meta name='viewport' content='width=device-width, initial-scale=1.0' /><meta http-equiv='X-UA-Compatible' content='ie=edge' /><script type='module'> import { ethers } from 'https://cdn-cors.ethers.io/lib/ethers-5.5.4.esm.min.js'; (async () => { let contractAddress = '"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "473:366:6"
                },
                {
                  "assignments": [
                    3666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3666,
                      "mutability": "mutable",
                      "name": "html2",
                      "nameLocation": "875:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3747,
                      "src": "849:31:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3665,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "849:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3668,
                  "initialValue": {
                    "hexValue": "273b6c65742070726f76696465723b206966202877696e646f772e657468657265756d29207b20636f6e736f6c652e6c6f672827646574656374656427293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e5765623350726f76696465722877696e646f772e657468657265756d2c2027616e7927293b207d20656c7365207b20636f6e736f6c652e6c6f6728276e6f7420646574656374656427293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e4a736f6e52706350726f7669646572282768747470733a2f2f636c6f7564666c6172652d6574682e636f6d2f27293b207d207472797b20636f6e7374206163636f756e7473203d2061776169742077696e646f772e657468657265756d2e72657175657374287b206d6574686f643a20276574685f726571756573744163636f756e7473272c207d293b20636f6e736f6c652e6c6f67286163636f756e7473293b206c657420636f6e6e656374656457616c6c6574203d20646f63756d656e742e717565727953656c6563746f72282723636f6e6e656374656457616c6c657427292e696e6e657248544d4c3d6163636f756e74733b207d206361746368286572726f72297b20636f6e736f6c652e6c6f6728276572726f7220636f6e6e656374696e672729207d207472797b206c6574207478203d2061776169742070726f76696465722e63616c6c287b202f2f20454e53207075626c6963207265736f6c766572206164647265737320746f3a2027307834393736666230334333326535423863666532623663434233316330394261373845426142613431272c202f2f206066756e6374696f6e2061646472286e616d656861736828277269636d6f6f2e65746827292920766965772072657475726e73202861646472657373296020646174613a2027307833623362353764656266303734666161313338623732633635616462646366623332393834376534663263303462646537663764643766636164356135326432663339356135353827207d293b20636f6e736f6c652e6c6f67287478293b202f2f2070726f76696465722e73656e645472616e73616374696f6e287b202f2f20746f3a20276e6e6e6e6963686f6c61732e657468272c202f2f206d6574686f643a27272c202f2f20706172616d733a27272c202f2f2076616c75653a206574686572732e7574696c732e706172736545746865722827302e30312729202f2f207d29207d6361746368286572726f72297b20636f6e736f6c652e6c6f6728276572726f7220636f6e6e656374696e6727293b207d206c6574206f7574707574203d2061776169742070726f76696465722e676574426c6f636b4e756d62657228293b206c657420646976203d20646f63756d656e742e717565727953656c6563746f722827236e756d62657227292e696e6e657248544d4c203d206f75747075743b202f2f20636f6e7374207369676e6572203d2070726f76696465722e6765745369676e657228293b202f2f20636f6e7374207478203d207369676e65722e73656e645472616e73616374696f6e287b202f2f20746f3a20276e6e6e6e6963686f6c61732e657468272c202f2f2076616c75653a206574686572732e7574696c732e706172736545746865722827302e30312729202f2f207d293b207d2928293b203c2f7363726970743e3c7469746c653e576562736974653c2f7469746c653e3c2f686561643e3c626f64793e3c6469763e3c2f6469763e3c6469762069643d27636f6e6e656374656457616c6c6574273e4e6f2077616c6c65742064657465637465642e3c2f6469763e3c6469763e3c696e70757420747970653d27627574746f6e272076616c75653d276d696e74273e3c2f696e7075743e3c2f6469763e3c2f626f64793e3c7374796c653e626f64797b646973706c61793a666c65783b666c65782d666c6f773a636f6c756d6e206e6f777261703b616c69676e2d6974656d733a63656e7465727d626f64793e6469767b70616464696e673a313470787d3c2f7374796c653e3c2f68746d6c3e",
                    "id": 3667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "883:1513:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6d87fbe9b4ce7ae615ef25e1111ffa527c66329e56d338e7808ea0262703e1b9",
                      "typeString": "literal_string \"';let provider; if (window.ethereum) { console.log('detected'); provider = new ethers.providers.Web3Provider(window.ethereum, 'any'); } else { console.log('not detected'); provider = new ethers.providers.JsonRpcProvider('https://cloudflare-eth.com/'); } try{ const accounts = await window.ethereum.request({ method: 'eth_requestAccounts', }); console.log(accounts); let connectedWallet = document.querySelector('#connectedWallet').innerHTML=accounts; } catch(error){ console.log('error connecting') } try{ let tx = await provider.call({ // ENS public resolver address to: '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41', // `function addr(namehash('ricmoo.eth')) view returns (address)` data: '0x3b3b57debf074faa138b72c65adbdcfb329847e4f2c04bde7f7dd7fcad5a52d2f395a558' }); console.log(tx); // provider.sendTransaction({ // to: 'nnnnicholas.eth', // method:'', // params:'', // value: ethers.utils.parseEther('0.01') // }) }catch(error){ console.log('error connecting'); } let output = await provider.getBlockNumber(); let div = document.querySelector('#number').innerHTML = output; // const signer = provider.getSigner(); // const tx = signer.sendTransaction({ // to: 'nnnnicholas.eth', // value: ethers.utils.parseEther('0.01') // }); })(); </script><title>Website</title></head><body><div></div><div id='connectedWallet'>No wallet detected.</div><div><input type='button' value='mint'></input></div></body><style>body{display:flex;flex-flow:column nowrap;align-items:center}body>div{padding:14px}</style></html>\""
                    },
                    "value": "';let provider; if (window.ethereum) { console.log('detected'); provider = new ethers.providers.Web3Provider(window.ethereum, 'any'); } else { console.log('not detected'); provider = new ethers.providers.JsonRpcProvider('https://cloudflare-eth.com/'); } try{ const accounts = await window.ethereum.request({ method: 'eth_requestAccounts', }); console.log(accounts); let connectedWallet = document.querySelector('#connectedWallet').innerHTML=accounts; } catch(error){ console.log('error connecting') } try{ let tx = await provider.call({ // ENS public resolver address to: '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41', // `function addr(namehash('ricmoo.eth')) view returns (address)` data: '0x3b3b57debf074faa138b72c65adbdcfb329847e4f2c04bde7f7dd7fcad5a52d2f395a558' }); console.log(tx); // provider.sendTransaction({ // to: 'nnnnicholas.eth', // method:'', // params:'', // value: ethers.utils.parseEther('0.01') // }) }catch(error){ console.log('error connecting'); } let output = await provider.getBlockNumber(); let div = document.querySelector('#number').innerHTML = output; // const signer = provider.getSigner(); // const tx = signer.sendTransaction({ // to: 'nnnnicholas.eth', // value: ethers.utils.parseEther('0.01') // }); })(); </script><title>Website</title></head><body><div></div><div id='connectedWallet'>No wallet detected.</div><div><input type='button' value='mint'></input></div></body><style>body{display:flex;flex-flow:column nowrap;align-items:center}body>div{padding:14px}</style></html>"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "849:1547:6"
                },
                {
                  "assignments": [
                    3670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3670,
                      "mutability": "mutable",
                      "name": "html",
                      "nameLocation": "2420:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3747,
                      "src": "2406:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3669,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2406:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3683,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3675,
                            "name": "html1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3662,
                            "src": "2451:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 3678,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3633,
                                "src": "2466:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Contract_$3622",
                                  "typeString": "contract Contract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Contract_$3622",
                                  "typeString": "contract Contract"
                                }
                              ],
                              "id": 3677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2458:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3676,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2458:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2458:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3680,
                            "name": "html2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3666,
                            "src": "2470:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3673,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2434:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2434:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2434:42:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2427:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3671,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2427:6:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:50:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2406:71:6"
                },
                {
                  "assignments": [
                    3685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3685,
                      "mutability": "mutable",
                      "name": "website",
                      "nameLocation": "2501:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3747,
                      "src": "2487:21:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3684,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2487:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3700,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646174613a746578742f68746d6c3b6261736536342c",
                            "id": 3690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2565:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6821a9d92da4a69c351ed152ed3afe0634bc664f49b3570017996dd080983a2d",
                              "typeString": "literal_string \"data:text/html;base64,\""
                            },
                            "value": "data:text/html;base64,"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3695,
                                    "name": "html",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3670,
                                    "src": "2627:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 3694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2621:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 3693,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2621:5:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2621:11:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3691,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "2607:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$114_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 3692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52,
                              "src": "2607:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 3697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2607:26:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6821a9d92da4a69c351ed152ed3afe0634bc664f49b3570017996dd080983a2d",
                              "typeString": "literal_string \"data:text/html;base64,\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3688,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2531:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2531:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2531:116:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2511:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3686,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2511:6:6",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:146:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2487:170:6"
                },
                {
                  "assignments": [
                    3702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3702,
                      "mutability": "mutable",
                      "name": "json",
                      "nameLocation": "2699:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 3747,
                      "src": "2685:18:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3701,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2685:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3718,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "7b226e616d65223a20224e465420576562736572766572222c20226465736372697074696f6e223a202254686973204e46542073657276657320616e2068746d6c207061676520746861742063616e206265207573656420746f206d696e74206d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e2e222c2022696d616765223a2022",
                                    "id": 3711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2826:144:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b48553ca3b41e7f7b0ecd4750087573161d0caba3191e4b471455ec87b009b53",
                                      "typeString": "literal_string \"{\"name\": \"NFT Webserver\", \"description\": \"This NFT serves an html page that can be used to mint more tokens from this collection.\", \"image\": \"\""
                                    },
                                    "value": "{\"name\": \"NFT Webserver\", \"description\": \"This NFT serves an html page that can be used to mint more tokens from this collection.\", \"image\": \""
                                  },
                                  {
                                    "id": 3712,
                                    "name": "website",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3685,
                                    "src": "2996:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "227d",
                                    "id": 3713,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3029:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                      "typeString": "literal_string \"\"}\""
                                    },
                                    "value": "\"}"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_b48553ca3b41e7f7b0ecd4750087573161d0caba3191e4b471455ec87b009b53",
                                      "typeString": "literal_string \"{\"name\": \"NFT Webserver\", \"description\": \"This NFT serves an html page that can be used to mint more tokens from this collection.\", \"image\": \"\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                      "typeString": "literal_string \"\"}\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 3709,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2784:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 3710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2784:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 3714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2784:271:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 3708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2756:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 3707,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "2756:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2756:317:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 3706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2733:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 3705,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2733:5:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2733:354:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3703,
                        "name": "Base64",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2706:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Base64_$114_$",
                          "typeString": "type(library Base64)"
                        }
                      },
                      "id": 3704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "2706:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (string memory)"
                      }
                    },
                    "id": 3717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:391:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2685:412:6"
                },
                {
                  "expression": {
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3719,
                      "name": "json",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3702,
                      "src": "3140:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                              "id": 3724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3171:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                "typeString": "literal_string \"data:application/json;base64,\""
                              },
                              "value": "data:application/json;base64,"
                            },
                            {
                              "id": 3725,
                              "name": "json",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3702,
                              "src": "3204:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                "typeString": "literal_string \"data:application/json;base64,\""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 3722,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3154:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3154:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3154:55:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3147:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3720,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3147:6:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3147:63:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3140:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3729,
                  "nodeType": "ExpressionStatement",
                  "src": "3140:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3270:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 3733,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3633,
                            "src": "3259:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Contract_$3622",
                              "typeString": "contract Contract"
                            }
                          },
                          "id": 3734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenURI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3621,
                          "src": "3259:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (string memory)"
                          }
                        },
                        "id": 3736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3259:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 3730,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11813,
                        "src": "3247:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11813_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 3732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4344,
                      "src": "3247:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 3737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3247:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3738,
                  "nodeType": "ExpressionStatement",
                  "src": "3247:26:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3303:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 3740,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3633,
                            "src": "3292:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Contract_$3622",
                              "typeString": "contract Contract"
                            }
                          },
                          "id": 3741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenURI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3621,
                          "src": "3292:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (string memory)"
                          }
                        },
                        "id": 3743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3292:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 3744,
                        "name": "json",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3702,
                        "src": "3307:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3739,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        435,
                        460,
                        490,
                        515,
                        574,
                        599,
                        629,
                        654,
                        1754,
                        1789
                      ],
                      "referencedDeclaration": 1754,
                      "src": "3283:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3283:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3746,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:29:6"
                }
              ]
            },
            "functionSelector": "b5b34603",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenURI",
            "nameLocation": "393:12:6",
            "parameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:6"
            },
            "returnParameters": {
              "id": 3657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:0:6"
            },
            "scope": 3749,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3629,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1901,
              "src": "205:6:6"
            },
            "id": 3630,
            "nodeType": "InheritanceSpecifier",
            "src": "205:6:6"
          }
        ],
        "canonicalName": "ContractTest",
        "contractDependencies": [
          3622
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3749,
          1901
        ],
        "name": "ContractTest",
        "nameLocation": "189:12:6",
        "scope": 3750,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 6
}