{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61022060405261017e60808181529062001c7c60a03980516200002b91600791602090910190620000ca565b50604051806105600160405280610526815260200162001756610526913980516200005f91600891602090910190620000ca565b503480156200006d57600080fd5b5060405162001dfa38038062001dfa83398101604081905262000090916200023d565b815182908290620000a9906000906020850190620000ca565b508051620000bf906001906020840190620000ca565b5050505050620002e4565b828054620000d890620002a7565b90600052602060002090601f016020900481019282620000fc576000855562000147565b82601f106200011757805160ff191683800117855562000147565b8280016001018555821562000147579182015b82811115620001475782518255916020019190600101906200012a565b506200015592915062000159565b5090565b5b808211156200015557600081556001016200015a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019857600080fd5b81516001600160401b0380821115620001b557620001b562000170565b604051601f8301601f19908116603f01168101908282118183101715620001e057620001e062000170565b81604052838152602092508683858801011115620001fd57600080fd5b600091505b8382101562000221578582018301518183018401529082019062000202565b83821115620002335760008385830101525b9695505050505050565b600080604083850312156200025157600080fd5b82516001600160401b03808211156200026957600080fd5b620002778683870162000186565b935060208501519150808211156200028e57600080fd5b506200029d8582860162000186565b9150509250929050565b600181811c90821680620002bc57607f821691505b60208210811415620002de57634e487b7160e01b600052602260045260246000fd5b50919050565b61146280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101ec578063b88d4fde146101ff578063c87b56dd14610212578063e985e9c51461022557600080fd5b80636352211e146101b057806370a08231146101c357806395d89b41146101e457600080fd5b8063095ea7b3116100c8578063095ea7b31461016d5780631249c58b1461018257806323b872dd1461018a57806342842e0e1461019d57600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610e0e565b610253565b60405190151581526020015b60405180910390f35b61011f6102a5565b60405161010e9190610e5b565b61015561013a366004610e8e565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b61018061017b366004610ebe565b610333565b005b61018061041a565b610180610198366004610ee8565b61043b565b6101806101ab366004610ee8565b610602565b6101556101be366004610e8e565b6106fa565b6101d66101d1366004610f24565b610751565b60405190815260200161010e565b61011f6107b4565b6101806101fa366004610f3f565b6107c1565b61018061020d366004610f7b565b61082d565b61011f610220366004610e8e565b610915565b610102610233366004611016565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061028457506380ac58cd60e01b6001600160e01b03198316145b8061029f5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546102b290611049565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90611049565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061037c57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6103be5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600680546104399133919060006104308361109a565b919050556109cb565b565b6000818152600260205260409020546001600160a01b038481169116146104915760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103b5565b6001600160a01b0382166104db5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b336001600160a01b038416148061051557506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061053657506000818152600460205260409020546001600160a01b031633145b6105735760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016103b5565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61060d83838361043b565b6001600160a01b0382163b15806106b65750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906110b5565b6001600160e01b031916145b6106f55760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b505050565b6000818152600260205260409020546001600160a01b03168061074c5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103b5565b919050565b60006001600160a01b0382166107985760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103b5565b506001600160a01b031660009081526003602052604090205490565b600180546102b290611049565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61083885858561043b565b6001600160a01b0384163b15806108cf5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906108809033908a908990899089906004016110d2565b6020604051808303816000875af115801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c391906110b5565b6001600160e01b031916145b61090e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b5050505050565b60606000600761092430610ad6565b6008604051602001610938939291906111c0565b6040516020818303038152906040529050600061095482610aec565b60405160200161096491906111f3565b6040516020818303038152906040529050600061099f8260405160200161098b9190611231565b604051602081830303815290604052610aec565b9050806040516020016109b2919061130b565b60408051601f1981840301815291905295945050505050565b6001600160a01b038216610a155760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b6000818152600260205260409020546001600160a01b031615610a6b5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016103b5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606061029f6001600160a01b0383166014610c52565b6060815160001415610b0c57505060408051602081019091526000815290565b60006040518060600160405280604081526020016113ed6040913990506000600384516002610b3b9190611350565b610b459190611368565b610b5090600461138a565b90506000610b5f826020611350565b67ffffffffffffffff811115610b7757610b776113a9565b6040519080825280601f01601f191660200182016040528015610ba1576020820181803683370190505b509050818152600183018586518101602084015b81831015610c0d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610bb5565b600389510660018114610c275760028114610c3857610c44565b613d3d60f01b600119830152610c44565b603d60f81b6000198301525b509398975050505050505050565b60606000610c6183600261138a565b610c6c906002611350565b67ffffffffffffffff811115610c8457610c846113a9565b6040519080825280601f01601f191660200182016040528015610cae576020820181803683370190505b509050600360fc1b81600081518110610cc957610cc96113bf565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610cf857610cf86113bf565b60200101906001600160f81b031916908160001a9053506000610d1c84600261138a565b610d27906001611350565b90505b6001811115610d9f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610d5b57610d5b6113bf565b1a60f81b828281518110610d7157610d716113bf565b60200101906001600160f81b031916908160001a90535060049490941c93610d98816113d5565b9050610d2a565b508315610dee5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103b5565b9392505050565b6001600160e01b031981168114610e0b57600080fd5b50565b600060208284031215610e2057600080fd5b8135610dee81610df5565b60005b83811015610e46578181015183820152602001610e2e565b83811115610e55576000848401525b50505050565b6020815260008251806020840152610e7a816040850160208701610e2b565b601f01601f19169190910160400192915050565b600060208284031215610ea057600080fd5b5035919050565b80356001600160a01b038116811461074c57600080fd5b60008060408385031215610ed157600080fd5b610eda83610ea7565b946020939093013593505050565b600080600060608486031215610efd57600080fd5b610f0684610ea7565b9250610f1460208501610ea7565b9150604084013590509250925092565b600060208284031215610f3657600080fd5b610dee82610ea7565b60008060408385031215610f5257600080fd5b610f5b83610ea7565b915060208301358015158114610f7057600080fd5b809150509250929050565b600080600080600060808688031215610f9357600080fd5b610f9c86610ea7565b9450610faa60208701610ea7565b935060408601359250606086013567ffffffffffffffff80821115610fce57600080fd5b818801915088601f830112610fe257600080fd5b813581811115610ff157600080fd5b89602082850101111561100357600080fd5b9699959850939650602001949392505050565b6000806040838503121561102957600080fd5b61103283610ea7565b915061104060208401610ea7565b90509250929050565b600181811c9082168061105d57607f821691505b6020821081141561107e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156110ae576110ae611084565b5060010190565b6000602082840312156110c757600080fd5b8151610dee81610df5565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b8054600090600181811c908083168061114057607f831692505b602080841082141561116257634e487b7160e01b600052602260045260246000fd5b8180156111765760018114611187576111b4565b60ff198616895284890196506111b4565b60008881526020902060005b868110156111ac5781548b820152908501908301611193565b505084890196505b50505050505092915050565b60006111cc8286611126565b84516111dc818360208901610e2b565b6111e881830186611126565b979650505050505050565b7519185d184e9d195e1d0bda1d1b5b0ed8985cd94d8d0b60521b815260008251611224816016850160208701610e2b565b9190910160160192915050565b7f7b226e616d65223a20224e465420576562736572766572222c2022646573637281527f697074696f6e223a202254686973204e46542073657276657320616e2068746d60208201527f6c207061676520746861742063616e206265207573656420746f206d696e742060408201527f6d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e60608201526d171116101134b6b0b3b2911d101160911b6080820152600082516112f281608e850160208701610e2b565b61227d60f01b608e939091019283015250609001919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161134381601d850160208701610e2b565b91909101601d0192915050565b6000821982111561136357611363611084565b500190565b60008261138557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113a4576113a4611084565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816113e4576113e4611084565b50600019019056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220674d5687dc74224a149073966c6cf54cda0e181baa4731123501cb2f604eee9364736f6c634300080a0033223b206c65742070726f76696465723b206966202877696e646f772e657468657265756d29207b20636f6e736f6c652e6c6f672822646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e5765623350726f7669646572282077696e646f772e657468657265756d2c2022616e792220293b207d20656c7365207b20636f6e736f6c652e6c6f6728226e6f7420646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e4a736f6e52706350726f766964657228202268747470733a2f2f636c6f7564666c6172652d6574682e636f6d2f2220293b207d20747279207b20636f6e7374206163636f756e7473203d2061776169742077696e646f772e657468657265756d2e72657175657374287b206d6574686f643a20226574685f726571756573744163636f756e7473222c207d293b20636f6e736f6c652e6c6f67286163636f756e7473293b206c657420636f6e6e656374656457616c6c6574203d2028646f63756d656e742e717565727953656c6563746f7228202223636f6e6e656374656457616c6c65742220292e696e6e657248544d4c203d206163636f756e7473293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a20636f6e7472616374416464726573732c20646174613a202230783132343963353862222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a2022307834393736666230334333326535423863666532623663434233316330394261373845426142613431222c20646174613a20223078336233623537646562663037346661613133386237326336356164626463666233323938343765346632633034626465376637646437666361643561353264326633393561353538222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d206c6574206f7574707574203d2061776169742070726f76696465722e676574426c6f636b4e756d62657228293b206c657420646976203d2028646f63756d656e742e717565727953656c6563746f722822236e756d62657222292e696e6e657248544d4c203d206f7574707574293b207d2928293b207d293b203c2f7363726970743e203c7469746c653e576562736974653c2f7469746c653e203c2f686561643e203c626f64793e203c6469762069643d22636f6e6e656374656457616c6c6574223e4e6f2077616c6c65742064657465637465642e3c2f6469763e203c6469763e203c696e70757420747970653d22627574746f6e222076616c75653d226d696e7422202f3e203c2f6469763e203c2f626f64793e203c7374796c653e20626f6479207b20646973706c61793a20666c65783b20666c65782d666c6f773a20636f6c756d6e206e6f777261703b20616c69676e2d6974656d733a2063656e7465723b207d20626f6479203e20646976207b2070616464696e673a20313470783b207d203c2f7374796c653e203c2f68746d6c3e3c21444f43545950452068746d6c3e203c68746d6c206c616e673d22656e223e203c686561643e203c6d65746120636861727365743d225554462d3822202f3e203c6d657461206e616d653d2276696577706f72742220636f6e74656e743d2277696474683d6465766963652d77696474682c20696e697469616c2d7363616c653d312e3022202f3e203c6d65746120687474702d65717569763d22582d55412d436f6d70617469626c652220636f6e74656e743d2269653d6564676522202f3e203c73637269707420747970653d226d6f64756c65223e20696d706f7274207b20657468657273207d2066726f6d202268747470733a2f2f63646e2d636f72732e6574686572732e696f2f6c69622f6574686572732d352e352e342e65736d2e6d696e2e6a73223b2077696e646f772e6164644576656e744c697374656e657228226c6f6164222c2066756e6374696f6e202829207b20286173796e63202829203d3e207b206c657420636f6e747261637441646472657373203d2022",
    "sourceMap": "283:399:5:-:0;189:2728;283:399;;189:2728;283:399;;;189:2728;283:399;;;;;;;;;;;;;;;:::i;:::-;;688:1335;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2029:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2220:12:4;;2092:5:5;;2098:7;;2220:12:4;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2242:16:4;;;;:6;;:16;;;;;:::i;:::-;;2154:111;;2029:80:5;;189:2728;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;189:2728:5;;;-1:-1:-1;189:2728:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:8;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:8;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:8:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:8;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;189:2728:5;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101ec578063b88d4fde146101ff578063c87b56dd14610212578063e985e9c51461022557600080fd5b80636352211e146101b057806370a08231146101c357806395d89b41146101e457600080fd5b8063095ea7b3116100c8578063095ea7b31461016d5780631249c58b1461018257806323b872dd1461018a57806342842e0e1461019d57600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610e0e565b610253565b60405190151581526020015b60405180910390f35b61011f6102a5565b60405161010e9190610e5b565b61015561013a366004610e8e565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b61018061017b366004610ebe565b610333565b005b61018061041a565b610180610198366004610ee8565b61043b565b6101806101ab366004610ee8565b610602565b6101556101be366004610e8e565b6106fa565b6101d66101d1366004610f24565b610751565b60405190815260200161010e565b61011f6107b4565b6101806101fa366004610f3f565b6107c1565b61018061020d366004610f7b565b61082d565b61011f610220366004610e8e565b610915565b610102610233366004611016565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061028457506380ac58cd60e01b6001600160e01b03198316145b8061029f5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546102b290611049565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90611049565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061037c57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6103be5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600680546104399133919060006104308361109a565b919050556109cb565b565b6000818152600260205260409020546001600160a01b038481169116146104915760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103b5565b6001600160a01b0382166104db5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b336001600160a01b038416148061051557506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061053657506000818152600460205260409020546001600160a01b031633145b6105735760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016103b5565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61060d83838361043b565b6001600160a01b0382163b15806106b65750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906110b5565b6001600160e01b031916145b6106f55760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b505050565b6000818152600260205260409020546001600160a01b03168061074c5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103b5565b919050565b60006001600160a01b0382166107985760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103b5565b506001600160a01b031660009081526003602052604090205490565b600180546102b290611049565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61083885858561043b565b6001600160a01b0384163b15806108cf5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906108809033908a908990899089906004016110d2565b6020604051808303816000875af115801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c391906110b5565b6001600160e01b031916145b61090e5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103b5565b5050505050565b60606000600761092430610ad6565b6008604051602001610938939291906111c0565b6040516020818303038152906040529050600061095482610aec565b60405160200161096491906111f3565b6040516020818303038152906040529050600061099f8260405160200161098b9190611231565b604051602081830303815290604052610aec565b9050806040516020016109b2919061130b565b60408051601f1981840301815291905295945050505050565b6001600160a01b038216610a155760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103b5565b6000818152600260205260409020546001600160a01b031615610a6b5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016103b5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606061029f6001600160a01b0383166014610c52565b6060815160001415610b0c57505060408051602081019091526000815290565b60006040518060600160405280604081526020016113ed6040913990506000600384516002610b3b9190611350565b610b459190611368565b610b5090600461138a565b90506000610b5f826020611350565b67ffffffffffffffff811115610b7757610b776113a9565b6040519080825280601f01601f191660200182016040528015610ba1576020820181803683370190505b509050818152600183018586518101602084015b81831015610c0d576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610bb5565b600389510660018114610c275760028114610c3857610c44565b613d3d60f01b600119830152610c44565b603d60f81b6000198301525b509398975050505050505050565b60606000610c6183600261138a565b610c6c906002611350565b67ffffffffffffffff811115610c8457610c846113a9565b6040519080825280601f01601f191660200182016040528015610cae576020820181803683370190505b509050600360fc1b81600081518110610cc957610cc96113bf565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610cf857610cf86113bf565b60200101906001600160f81b031916908160001a9053506000610d1c84600261138a565b610d27906001611350565b90505b6001811115610d9f576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610d5b57610d5b6113bf565b1a60f81b828281518110610d7157610d716113bf565b60200101906001600160f81b031916908160001a90535060049490941c93610d98816113d5565b9050610d2a565b508315610dee5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103b5565b9392505050565b6001600160e01b031981168114610e0b57600080fd5b50565b600060208284031215610e2057600080fd5b8135610dee81610df5565b60005b83811015610e46578181015183820152602001610e2e565b83811115610e55576000848401525b50505050565b6020815260008251806020840152610e7a816040850160208701610e2b565b601f01601f19169190910160400192915050565b600060208284031215610ea057600080fd5b5035919050565b80356001600160a01b038116811461074c57600080fd5b60008060408385031215610ed157600080fd5b610eda83610ea7565b946020939093013593505050565b600080600060608486031215610efd57600080fd5b610f0684610ea7565b9250610f1460208501610ea7565b9150604084013590509250925092565b600060208284031215610f3657600080fd5b610dee82610ea7565b60008060408385031215610f5257600080fd5b610f5b83610ea7565b915060208301358015158114610f7057600080fd5b809150509250929050565b600080600080600060808688031215610f9357600080fd5b610f9c86610ea7565b9450610faa60208701610ea7565b935060408601359250606086013567ffffffffffffffff80821115610fce57600080fd5b818801915088601f830112610fe257600080fd5b813581811115610ff157600080fd5b89602082850101111561100357600080fd5b9699959850939650602001949392505050565b6000806040838503121561102957600080fd5b61103283610ea7565b915061104060208401610ea7565b90509250929050565b600181811c9082168061105d57607f821691505b6020821081141561107e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156110ae576110ae611084565b5060010190565b6000602082840312156110c757600080fd5b8151610dee81610df5565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b8054600090600181811c908083168061114057607f831692505b602080841082141561116257634e487b7160e01b600052602260045260246000fd5b8180156111765760018114611187576111b4565b60ff198616895284890196506111b4565b60008881526020902060005b868110156111ac5781548b820152908501908301611193565b505084890196505b50505050505092915050565b60006111cc8286611126565b84516111dc818360208901610e2b565b6111e881830186611126565b979650505050505050565b7519185d184e9d195e1d0bda1d1b5b0ed8985cd94d8d0b60521b815260008251611224816016850160208701610e2b565b9190910160160192915050565b7f7b226e616d65223a20224e465420576562736572766572222c2022646573637281527f697074696f6e223a202254686973204e46542073657276657320616e2068746d60208201527f6c207061676520746861742063616e206265207573656420746f206d696e742060408201527f6d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e60608201526d171116101134b6b0b3b2911d101160911b6080820152600082516112f281608e850160208701610e2b565b61227d60f01b608e939091019283015250609001919050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161134381601d850160208701610e2b565b91909101601d0192915050565b6000821982111561136357611363611084565b500190565b60008261138557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156113a4576113a4611084565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816113e4576113e4611084565b50600019019056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220674d5687dc74224a149073966c6cf54cda0e181baa4731123501cb2f604eee9364736f6c634300080a0033",
    "sourceMap": "189:2728:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:335:4;;;;;;:::i;:::-;;:::i;:::-;;;565:14:8;;558:22;540:41;;528:2;513:18;4714:335:4;;;;;;;;899:18;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1844:46:4;;;;;;-1:-1:-1;;;;;1592:32:8;;;1574:51;;1562:2;1547:18;1844:46:4;1428:203:8;2453:282:4;;;;;;:::i;:::-;;:::i;:::-;;2115:74:5;;;:::i;2950:741:4:-;;;;;;:::i;:::-;;:::i;3697:396::-;;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;:::i;:::-;;:::i;1482:168::-;;;;;;:::i;:::-;;:::i;:::-;;;2743:25:8;;;2731:2;2716:18;1482:168:4;2597:177:8;924:20:4;;;:::i;2741:203::-;;;;;;:::i;:::-;;:::i;4099:427::-;;;;;;:::i;:::-;;:::i;2195:716:5:-;;;;;;:::i;:::-;;:::i;1897:68:4:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:335;4790:4;-1:-1:-1;;;;;;;;;4825:25:4;;;;:100;;-1:-1:-1;;;;;;;;;;4900:25:4;;;4825:100;:175;;;-1:-1:-1;;;;;;;;;;4975:25:4;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:4:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2540:12:4;2571:10;:19;;;:58;;-1:-1:-1;;;;;;2594:23:4;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;-1:-1:-1;;;2563:85:4;;4796:2:8;2563:85:4;;;4778:21:8;4835:2;4815:18;;;4808:30;-1:-1:-1;;;4854:18:8;;;4847:44;4908:18;;2563:85:4;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2659:25:4;-1:-1:-1;;;;;2659:25:4;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2115:74:5:-;2168:11;:13;;2150:32;;2156:10;;2168:13;:11;:13;;;:::i;:::-;;;;;2150:5;:32::i;:::-;2115:74::o;2950:741:4:-;3081:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3073:20:4;;;3081:12;;3073:20;3065:43;;;;-1:-1:-1;;;3065:43:4;;5411:2:8;3065:43:4;;;5393:21:8;5450:2;5430:18;;;5423:30;-1:-1:-1;;;5469:18:8;;;5462:40;5519:18;;3065:43:4;5209:334:8;3065:43:4;-1:-1:-1;;;;;3127:16:4;;3119:46;;;;-1:-1:-1;;;3119:46:4;;5750:2:8;3119:46:4;;;5732:21:8;5789:2;5769:18;;;5762:30;-1:-1:-1;;;5808:18:8;;;5801:47;5865:18;;3119:46:4;5548:341:8;3119:46:4;3197:10;-1:-1:-1;;;;;3197:18:4;;;;:56;;-1:-1:-1;;;;;;3219:22:4;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:4;;;;:11;:15;;;;;;-1:-1:-1;;;;;3271:15:4;3257:10;:29;3197:89;3176:150;;;;-1:-1:-1;;;3176:150:4;;4796:2:8;3176:150:4;;;4778:21:8;4835:2;4815:18;;;4808:30;-1:-1:-1;;;4854:18:8;;;4847:44;4908:18;;3176:150:4;4594:338:8;3176:150:4;-1:-1:-1;;;;;3526:16:4;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3526:18:4;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3596:17:4;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;3697:396::-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;-1:-1:-1;;;;;3874:14:4;;;:19;;:170;;-1:-1:-1;3913:66:4;;-1:-1:-1;;;3913:66:4;;;3954:10;3913:66;;;6199:34:8;-1:-1:-1;;;;;6269:15:8;;;6249:18;;;6242:43;6301:18;;;6294:34;;;6364:3;6344:18;;;6337:31;-1:-1:-1;6384:19:8;;;6377:30;3999:45:4;;3913:40;;;;3999:45;;6424:19:8;;3913:66:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3913:131:4;;3874:170;3853:233;;;;-1:-1:-1;;;3853:233:4;;6910:2:8;3853:233:4;;;6892:21:8;6949:2;6929:18;;;6922:30;-1:-1:-1;;;6968:18:8;;;6961:46;7024:18;;3853:233:4;6708:340:8;3853:233:4;3697:396;;;:::o;1327:149::-;1385:13;1427:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1427:12:4;1418:36;1410:59;;;;-1:-1:-1;;;1410:59:4;;7255:2:8;1410:59:4;;;7237:21:8;7294:2;7274:18;;;7267:30;-1:-1:-1;;;7313:18:8;;;7306:40;7363:18;;1410:59:4;7053:334:8;1410:59:4;1327:149;;;:::o;1482:168::-;1545:7;-1:-1:-1;;;;;1572:19:4;;1564:44;;;;-1:-1:-1;;;1564:44:4;;7594:2:8;1564:44:4;;;7576:21:8;7633:2;7613:18;;;7606:30;-1:-1:-1;;;7652:18:8;;;7645:42;7704:18;;1564:44:4;7392:336:8;1564:44:4;-1:-1:-1;;;;;;1626:17:4;;;;;:10;:17;;;;;;;1482:168::o;924:20::-;;;;;;;:::i;2741:203::-;2843:10;2826:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2826:38:4;;;;;;;;;;;;:49;;-1:-1:-1;;2826:49:4;;;;;;;;;;2891:46;;540:41:8;;;2826:38:4;;2843:10;2891:46;;513:18:8;2891:46:4;;;;;;;2741:203;;:::o;4099:427::-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;-1:-1:-1;;;;;4305:14:4;;;:19;;:172;;-1:-1:-1;4344:68:4;;-1:-1:-1;;;4344:68:4;;;4432:45;-1:-1:-1;;;;;4344:40:4;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4344:133:4;;4305:172;4284:235;;;;-1:-1:-1;;;4284:235:4;;6910:2:8;4284:235:4;;;6892:21:8;6949:2;6929:18;;;6922:30;-1:-1:-1;;;6968:18:8;;;6961:46;7024:18;;4284:235:4;6708:340:8;4284:235:4;4099:427;;;;;:::o;2195:716:5:-;2252:13;2277:18;2322:5;2329:34;2357:4;2329:19;:34::i;:::-;2366:5;2305:67;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2277:96;;2383:21;2457:26;2477:4;2457:13;:26::i;:::-;2414:70;;;;;;;;:::i;:::-;;;;;;;;;;;;;2383:102;;2513:18;2534:209;2727:7;2561:179;;;;;;;;:::i;:::-;;;;;;;;;;;;;2534:13;:209::i;:::-;2513:230;;2850:4;2800:55;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2800:55:5;;;;;;;;;;2195:716;-1:-1:-1;;;;;2195:716:5:o;5243:371:4:-;-1:-1:-1;;;;;5317:16:4;;5309:46;;;;-1:-1:-1;;;5309:46:4;;5750:2:8;5309:46:4;;;5732:21:8;5789:2;5769:18;;;5762:30;-1:-1:-1;;;5808:18:8;;;5801:47;5865:18;;5309:46:4;5548:341:8;5309:46:4;5398:1;5374:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5374:12:4;:26;5366:53;;;;-1:-1:-1;;;5366:53:4;;12020:2:8;5366:53:4;;;12002:21:8;12059:2;12039:18;;;12032:30;-1:-1:-1;;;12078:18:8;;;12071:44;12132:18;;5366:53:4;11818:338:8;5366:53:4;-1:-1:-1;;;;;5509:14:4;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5546:17:4;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;2102:149:2:-;2160:13;2192:52;-1:-1:-1;;;;;2204:22:2;;311:2;2192:11;:52::i;777:1861:0:-;835:13;864:4;:11;879:1;864:16;860:31;;;-1:-1:-1;;882:9:0;;;;;;;;;-1:-1:-1;882:9:0;;;777:1861::o;860:31::-;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1050:4;:11;1064:1;1050:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:27;;:1;:27;:::i;:::-;1023:48;-1:-1:-1;1151:20:0;1185:15;1023:48;1198:2;1185:15;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1174:27:0;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;-1:-1:-1;2378:1:0;2363:17;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;-1:-1:-1;;;;;2495:17:0;;2488:43;2479:54;;2546:52;-1:-1:-1;;;;;2562:17:0;;2555:41;2440:158;-1:-1:-1;2625:6:0;;777:1861;-1:-1:-1;;;;;;;;777:1861:0:o;1513:437:2:-;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:2;;1613:47;;-1:-1:-1;;;1670:6:2;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:2;;;;;;;;;-1:-1:-1;;;1695:6:2;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:2;;;;;;;;-1:-1:-1;1725:9:2;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:2;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:2;;;;;;;;-1:-1:-1;1836:1:2;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:2;;1857:55;;;;-1:-1:-1;;;1857:55:2;;13296:2:8;1857:55:2;;;13278:21:8;;;13315:18;;;13308:30;13374:34;13354:18;;;13347:62;13426:18;;1857:55:2;13094:356:8;1857:55:2;1936:6;1513:437;-1:-1:-1;;;1513:437:2:o;14:131:8:-;-1:-1:-1;;;;;;88:32:8;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;840:1;831:6;826:3;822:16;815:27;796:48;;592:258;;;:::o;855:383::-;1004:2;993:9;986:21;967:4;1036:6;1030:13;1079:6;1074:2;1063:9;1059:18;1052:34;1095:66;1154:6;1149:2;1138:9;1134:18;1129:2;1121:6;1117:15;1095:66;:::i;:::-;1222:2;1201:15;-1:-1:-1;;1197:29:8;1182:45;;;;1229:2;1178:54;;855:383;-1:-1:-1;;855:383:8:o;1243:180::-;1302:6;1355:2;1343:9;1334:7;1330:23;1326:32;1323:52;;;1371:1;1368;1361:12;1323:52;-1:-1:-1;1394:23:8;;1243:180;-1:-1:-1;1243:180:8:o;1636:173::-;1704:20;;-1:-1:-1;;;;;1753:31:8;;1743:42;;1733:70;;1799:1;1796;1789:12;1814:254;1882:6;1890;1943:2;1931:9;1922:7;1918:23;1914:32;1911:52;;;1959:1;1956;1949:12;1911:52;1982:29;2001:9;1982:29;:::i;:::-;1972:39;2058:2;2043:18;;;;2030:32;;-1:-1:-1;;;1814:254:8:o;2073:328::-;2150:6;2158;2166;2219:2;2207:9;2198:7;2194:23;2190:32;2187:52;;;2235:1;2232;2225:12;2187:52;2258:29;2277:9;2258:29;:::i;:::-;2248:39;;2306:38;2340:2;2329:9;2325:18;2306:38;:::i;:::-;2296:48;;2391:2;2380:9;2376:18;2363:32;2353:42;;2073:328;;;;;:::o;2406:186::-;2465:6;2518:2;2506:9;2497:7;2493:23;2489:32;2486:52;;;2534:1;2531;2524:12;2486:52;2557:29;2576:9;2557:29;:::i;2779:347::-;2844:6;2852;2905:2;2893:9;2884:7;2880:23;2876:32;2873:52;;;2921:1;2918;2911:12;2873:52;2944:29;2963:9;2944:29;:::i;:::-;2934:39;;3023:2;3012:9;3008:18;2995:32;3070:5;3063:13;3056:21;3049:5;3046:32;3036:60;;3092:1;3089;3082:12;3036:60;3115:5;3105:15;;;2779:347;;;;;:::o;3131:808::-;3228:6;3236;3244;3252;3260;3313:3;3301:9;3292:7;3288:23;3284:33;3281:53;;;3330:1;3327;3320:12;3281:53;3353:29;3372:9;3353:29;:::i;:::-;3343:39;;3401:38;3435:2;3424:9;3420:18;3401:38;:::i;:::-;3391:48;;3486:2;3475:9;3471:18;3458:32;3448:42;;3541:2;3530:9;3526:18;3513:32;3564:18;3605:2;3597:6;3594:14;3591:34;;;3621:1;3618;3611:12;3591:34;3659:6;3648:9;3644:22;3634:32;;3704:7;3697:4;3693:2;3689:13;3685:27;3675:55;;3726:1;3723;3716:12;3675:55;3766:2;3753:16;3792:2;3784:6;3781:14;3778:34;;;3808:1;3805;3798:12;3778:34;3853:7;3848:2;3839:6;3835:2;3831:15;3827:24;3824:37;3821:57;;;3874:1;3871;3864:12;3821:57;3131:808;;;;-1:-1:-1;3131:808:8;;-1:-1:-1;3905:2:8;3897:11;;3927:6;3131:808;-1:-1:-1;;;3131:808:8:o;3944:260::-;4012:6;4020;4073:2;4061:9;4052:7;4048:23;4044:32;4041:52;;;4089:1;4086;4079:12;4041:52;4112:29;4131:9;4112:29;:::i;:::-;4102:39;;4160:38;4194:2;4183:9;4179:18;4160:38;:::i;:::-;4150:48;;3944:260;;;;;:::o;4209:380::-;4288:1;4284:12;;;;4331;;;4352:61;;4406:4;4398:6;4394:17;4384:27;;4352:61;4459:2;4451:6;4448:14;4428:18;4425:38;4422:161;;;4505:10;4500:3;4496:20;4493:1;4486:31;4540:4;4537:1;4530:15;4568:4;4565:1;4558:15;4422:161;;4209:380;;;:::o;4937:127::-;4998:10;4993:3;4989:20;4986:1;4979:31;5029:4;5026:1;5019:15;5053:4;5050:1;5043:15;5069:135;5108:3;-1:-1:-1;;5129:17:8;;5126:43;;;5149:18;;:::i;:::-;-1:-1:-1;5196:1:8;5185:13;;5069:135::o;6454:249::-;6523:6;6576:2;6564:9;6555:7;6551:23;6547:32;6544:52;;;6592:1;6589;6582:12;6544:52;6624:9;6618:16;6643:30;6667:5;6643:30;:::i;7733:662::-;-1:-1:-1;;;;;8012:15:8;;;7994:34;;8064:15;;8059:2;8044:18;;8037:43;8111:2;8096:18;;8089:34;;;8159:3;8154:2;8139:18;;8132:31;;;8179:19;;8172:35;;;7937:4;8200:6;8250;7974:3;8229:19;;8216:49;8315:1;8309:3;8300:6;8289:9;8285:22;8281:32;8274:43;8385:3;8378:2;8374:7;8369:2;8361:6;8357:15;8353:29;8342:9;8338:45;8334:55;8326:63;;7733:662;;;;;;;;:::o;8526:973::-;8611:12;;8576:3;;8666:1;8686:18;;;;8739;;;;8766:61;;8820:4;8812:6;8808:17;8798:27;;8766:61;8846:2;8894;8886:6;8883:14;8863:18;8860:38;8857:161;;;8940:10;8935:3;8931:20;8928:1;8921:31;8975:4;8972:1;8965:15;9003:4;9000:1;8993:15;8857:161;9034:18;9061:104;;;;9179:1;9174:319;;;;9027:466;;9061:104;-1:-1:-1;;9094:24:8;;9082:37;;9139:16;;;;-1:-1:-1;9061:104:8;;9174:319;8473:1;8466:14;;;8510:4;8497:18;;9268:1;9282:165;9296:6;9293:1;9290:13;9282:165;;;9374:14;;9361:11;;;9354:35;9417:16;;;;9311:10;;9282:165;;;9286:3;;9476:6;9471:3;9467:16;9460:23;;9027:466;;;;;;;8526:973;;;;:::o;9504:456::-;9725:3;9753:38;9787:3;9779:6;9753:38;:::i;:::-;9820:6;9814:13;9836:52;9881:6;9877:2;9870:4;9862:6;9858:17;9836:52;:::i;:::-;9904:50;9946:6;9942:2;9938:15;9930:6;9904:50;:::i;:::-;9897:57;9504:456;-1:-1:-1;;;;;;;9504:456:8:o;9965:441::-;-1:-1:-1;;;10222:3:8;10215:37;10197:3;10281:6;10275:13;10297:62;10352:6;10347:2;10342:3;10338:12;10331:4;10323:6;10319:17;10297:62;:::i;:::-;10379:16;;;;10397:2;10375:25;;9965:441;-1:-1:-1;;9965:441:8:o;10411:949::-;10774:66;10769:3;10762:79;10871:66;10866:2;10861:3;10857:12;10850:88;10968:34;10963:2;10958:3;10954:12;10947:56;11033:34;11028:2;11023:3;11019:12;11012:56;11108:30;11103:3;11099:40;11093:3;11088;11084:13;11077:63;10744:3;11169:6;11163:13;11185:61;11239:6;11233:3;11228;11224:13;11219:2;11211:6;11207:15;11185:61;:::i;:::-;-1:-1:-1;;;11305:3:8;11265:16;;;;11297:12;;;11290:36;-1:-1:-1;11350:3:8;11342:12;;10411:949;-1:-1:-1;10411:949:8:o;11365:448::-;11627:31;11622:3;11615:44;11597:3;11688:6;11682:13;11704:62;11759:6;11754:2;11749:3;11745:12;11738:4;11730:6;11726:17;11704:62;:::i;:::-;11786:16;;;;11804:2;11782:25;;11365:448;-1:-1:-1;;11365:448:8:o;12161:128::-;12201:3;12232:1;12228:6;12225:1;12222:13;12219:39;;;12238:18;;:::i;:::-;-1:-1:-1;12274:9:8;;12161:128::o;12294:217::-;12334:1;12360;12350:132;;12404:10;12399:3;12395:20;12392:1;12385:31;12439:4;12436:1;12429:15;12467:4;12464:1;12457:15;12350:132;-1:-1:-1;12496:9:8;;12294:217::o;12516:168::-;12556:7;12622:1;12618;12614:6;12610:14;12607:1;12604:21;12599:1;12592:9;12585:17;12581:45;12578:71;;;12629:18;;:::i;:::-;-1:-1:-1;12669:9:8;;12516:168::o;12689:127::-;12750:10;12745:3;12741:20;12738:1;12731:31;12781:4;12778:1;12771:15;12805:4;12802:1;12795:15;12821:127;12882:10;12877:3;12873:20;12870:1;12863:31;12913:4;12910:1;12903:15;12937:4;12934:1;12927:15;12953:136;12992:3;13020:5;13010:39;;13029:18;;:::i;:::-;-1:-1:-1;;;13065:18:8;;12953:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint()": "1249c58b",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":base64/=lib/base64/\",\":brechtpd/base64/=lib/base64/\",\":ds-test/=lib/ds-test/src/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/base64/Base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"src/Contract.sol\":{\"keccak256\":\"0x160ef8b9a0573633fecedab524bba80ce1d712948a014254dfacdc43c3ab6e96\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b31e772b261732cabbadd2c3fefa0b754fb13ee9592a9e5ee14bee465b5f9f70\",\"dweb:/ipfs/QmeEWMs37tNhxJABb6c3AnVhvLBQeVMS73oebJro5j6AZN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.10+commit.fc410830"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":base64/=lib/base64/",
        ":brechtpd/base64/=lib/base64/",
        ":ds-test/=lib/ds-test/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contract.sol": "Contract"
      },
      "libraries": {}
    },
    "sources": {
      "lib/base64/Base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Contract.sol": {
        "keccak256": "0x160ef8b9a0573633fecedab524bba80ce1d712948a014254dfacdc43c3ab6e96",
        "urls": [
          "bzz-raw://b31e772b261732cabbadd2c3fefa0b754fb13ee9592a9e5ee14bee465b5f9f70",
          "dweb:/ipfs/QmeEWMs37tNhxJABb6c3AnVhvLBQeVMS73oebJro5j6AZN"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contract.sol",
    "id": 3623,
    "exportedSymbols": {
      "Base64": [
        114
      ],
      "Contract": [
        3622
      ],
      "ERC721": [
        3485
      ],
      "ERC721TokenReceiver": [
        3505
      ],
      "Math": [
        2941
      ],
      "Strings": [
        2076
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2878:5",
    "nodes": [
      {
        "id": 3507,
        "nodeType": "PragmaDirective",
        "src": "39:23:5",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 3508,
        "nodeType": "ImportDirective",
        "src": "64:35:5",
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3623,
        "sourceUnit": 3506,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3509,
        "nodeType": "ImportDirective",
        "src": "100:50:5",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3623,
        "sourceUnit": 2077,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3510,
        "nodeType": "ImportDirective",
        "src": "151:36:5",
        "absolutePath": "lib/base64/Base64.sol",
        "file": "brechtpd/base64/Base64.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3623,
        "sourceUnit": 115,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3622,
        "nodeType": "ContractDefinition",
        "src": "189:2728:5",
        "nodes": [
          {
            "id": 3515,
            "nodeType": "UsingForDirective",
            "src": "222:26:5",
            "libraryName": {
              "id": 3513,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2076,
              "src": "228:7:5"
            },
            "typeName": {
              "id": 3514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3517,
            "nodeType": "VariableDeclaration",
            "src": "258:19:5",
            "constant": false,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "266:11:5",
            "scope": 3622,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3516,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 3520,
            "nodeType": "VariableDeclaration",
            "src": "283:399:5",
            "constant": false,
            "mutability": "mutable",
            "name": "html1",
            "nameLocation": "290:5:5",
            "scope": 3622,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3518,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "283:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "3c21444f43545950452068746d6c3e203c68746d6c206c616e673d22656e223e203c686561643e203c6d65746120636861727365743d225554462d3822202f3e203c6d657461206e616d653d2276696577706f72742220636f6e74656e743d2277696474683d6465766963652d77696474682c20696e697469616c2d7363616c653d312e3022202f3e203c6d65746120687474702d65717569763d22582d55412d436f6d70617469626c652220636f6e74656e743d2269653d6564676522202f3e203c73637269707420747970653d226d6f64756c65223e20696d706f7274207b20657468657273207d2066726f6d202268747470733a2f2f63646e2d636f72732e6574686572732e696f2f6c69622f6574686572732d352e352e342e65736d2e6d696e2e6a73223b2077696e646f772e6164644576656e744c697374656e657228226c6f6164222c2066756e6374696f6e202829207b20286173796e63202829203d3e207b206c657420636f6e747261637441646472657373203d2022",
              "id": 3519,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "298:384:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c509de70dfbafd824c8bf473e88d173f36ac5fdee07b54b55d6c7147e0a3e23b",
                "typeString": "literal_string \"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\" /> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /> <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /> <script type=\"module\"> import { ethers } from \"https://cdn-cors.ethers.io/lib/ethers-5.5.4.esm.min.js\"; window.addEventListener(\"load\", function () { (async () => { let contractAddress = \"\""
              },
              "value": "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\" /> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /> <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" /> <script type=\"module\"> import { ethers } from \"https://cdn-cors.ethers.io/lib/ethers-5.5.4.esm.min.js\"; window.addEventListener(\"load\", function () { (async () => { let contractAddress = \""
            },
            "visibility": "internal"
          },
          {
            "id": 3523,
            "nodeType": "VariableDeclaration",
            "src": "688:1335:5",
            "constant": false,
            "mutability": "mutable",
            "name": "html2",
            "nameLocation": "695:5:5",
            "scope": 3622,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3521,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "688:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "223b206c65742070726f76696465723b206966202877696e646f772e657468657265756d29207b20636f6e736f6c652e6c6f672822646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e5765623350726f7669646572282077696e646f772e657468657265756d2c2022616e792220293b207d20656c7365207b20636f6e736f6c652e6c6f6728226e6f7420646574656374656422293b2070726f7669646572203d206e6577206574686572732e70726f7669646572732e4a736f6e52706350726f766964657228202268747470733a2f2f636c6f7564666c6172652d6574682e636f6d2f2220293b207d20747279207b20636f6e7374206163636f756e7473203d2061776169742077696e646f772e657468657265756d2e72657175657374287b206d6574686f643a20226574685f726571756573744163636f756e7473222c207d293b20636f6e736f6c652e6c6f67286163636f756e7473293b206c657420636f6e6e656374656457616c6c6574203d2028646f63756d656e742e717565727953656c6563746f7228202223636f6e6e656374656457616c6c65742220292e696e6e657248544d4c203d206163636f756e7473293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a20636f6e7472616374416464726573732c20646174613a202230783132343963353862222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d20747279207b206c6574207478203d2061776169742070726f76696465722e63616c6c287b20746f3a2022307834393736666230334333326535423863666532623663434233316330394261373845426142613431222c20646174613a20223078336233623537646562663037346661613133386237326336356164626463666233323938343765346632633034626465376637646437666361643561353264326633393561353538222c207d293b20636f6e736f6c652e6c6f67287478293b207d20636174636820286572726f7229207b20636f6e736f6c652e6c6f6728226572726f7220636f6e6e656374696e6722293b207d206c6574206f7574707574203d2061776169742070726f76696465722e676574426c6f636b4e756d62657228293b206c657420646976203d2028646f63756d656e742e717565727953656c6563746f722822236e756d62657222292e696e6e657248544d4c203d206f7574707574293b207d2928293b207d293b203c2f7363726970743e203c7469746c653e576562736974653c2f7469746c653e203c2f686561643e203c626f64793e203c6469762069643d22636f6e6e656374656457616c6c6574223e4e6f2077616c6c65742064657465637465642e3c2f6469763e203c6469763e203c696e70757420747970653d22627574746f6e222076616c75653d226d696e7422202f3e203c2f6469763e203c2f626f64793e203c7374796c653e20626f6479207b20646973706c61793a20666c65783b20666c65782d666c6f773a20636f6c756d6e206e6f777261703b20616c69676e2d6974656d733a2063656e7465723b207d20626f6479203e20646976207b2070616464696e673a20313470783b207d203c2f7374796c653e203c2f68746d6c3e",
              "id": 3522,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "703:1320:5",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_abfe4e8c7bcd13fd506cbae3cb4e32e037d74cce1d2786cb8ebf272c1419c1ac",
                "typeString": "literal_string \"\"; let provider; if (window.ethereum) { console.log(\"detected\"); provider = new ethers.providers.Web3Provider( window.ethereum, \"any\" ); } else { console.log(\"not detected\"); provider = new ethers.providers.JsonRpcProvider( \"https://cloudflare-eth.com/\" ); } try { const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\", }); console.log(accounts); let connectedWallet = (document.querySelector( \"#connectedWallet\" ).innerHTML = accounts); } catch (error) { console.log(\"error connecting\"); } try { let tx = await provider.call({ to: contractAddress, data: \"0x1249c58b\", }); console.log(tx); } catch (error) { console.log(\"error connecting\"); } try { let tx = await provider.call({ to: \"0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41\", data: \"0x3b3b57debf074faa138b72c65adbdcfb329847e4f2c04bde7f7dd7fcad5a52d2f395a558\", }); console.log(tx); } catch (error) { console.log(\"error connecting\"); } let output = await provider.getBlockNumber(); let div = (document.querySelector(\"#number\").innerHTML = output); })(); }); </script> <title>Website</title> </head> <body> <div id=\"connectedWallet\">No wallet detected.</div> <div> <input type=\"button\" value=\"mint\" /> </div> </body> <style> body { display: flex; flex-flow: column nowrap; align-items: center; } body > div { padding: 14px; } </style> </html>\""
              },
              "value": "\"; let provider; if (window.ethereum) { console.log(\"detected\"); provider = new ethers.providers.Web3Provider( window.ethereum, \"any\" ); } else { console.log(\"not detected\"); provider = new ethers.providers.JsonRpcProvider( \"https://cloudflare-eth.com/\" ); } try { const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\", }); console.log(accounts); let connectedWallet = (document.querySelector( \"#connectedWallet\" ).innerHTML = accounts); } catch (error) { console.log(\"error connecting\"); } try { let tx = await provider.call({ to: contractAddress, data: \"0x1249c58b\", }); console.log(tx); } catch (error) { console.log(\"error connecting\"); } try { let tx = await provider.call({ to: \"0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41\", data: \"0x3b3b57debf074faa138b72c65adbdcfb329847e4f2c04bde7f7dd7fcad5a52d2f395a558\", }); console.log(tx); } catch (error) { console.log(\"error connecting\"); } let output = await provider.getBlockNumber(); let div = (document.querySelector(\"#number\").innerHTML = output); })(); }); </script> <title>Website</title> </head> <body> <div id=\"connectedWallet\">No wallet detected.</div> <div> <input type=\"button\" value=\"mint\" /> </div> </body> <style> body { display: flex; flex-flow: column nowrap; align-items: center; } body > div { padding: 14px; } </style> </html>"
            },
            "visibility": "internal"
          },
          {
            "id": 3535,
            "nodeType": "FunctionDefinition",
            "src": "2029:80:5",
            "body": {
              "id": 3534,
              "nodeType": "Block",
              "src": "2107:2:5",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3530,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3525,
                    "src": "2092:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3531,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3527,
                    "src": "2098:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3532,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3529,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3485,
                  "src": "2085:6:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2085:21:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3525,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2055:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3535,
                  "src": "2041:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3527,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "2076:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3535,
                  "src": "2062:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2062:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2040:44:5"
            },
            "returnParameters": {
              "id": 3533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2107:0:5"
            },
            "scope": 3622,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3546,
            "nodeType": "FunctionDefinition",
            "src": "2115:74:5",
            "body": {
              "id": 3545,
              "nodeType": "Block",
              "src": "2140:49:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3539,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2156:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2156:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "2168:13:5",
                        "subExpression": {
                          "id": 3541,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3517,
                          "src": "2168:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3538,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3355,
                      "src": "2150:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:32:5"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2124:4:5",
            "parameters": {
              "id": 3536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:2:5"
            },
            "returnParameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:0:5"
            },
            "scope": 3622,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3621,
            "nodeType": "FunctionDefinition",
            "src": "2195:716:5",
            "body": {
              "id": 3620,
              "nodeType": "Block",
              "src": "2267:644:5",
              "statements": [
                {
                  "assignments": [
                    3555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3555,
                      "mutability": "mutable",
                      "name": "html",
                      "nameLocation": "2291:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 3620,
                      "src": "2277:18:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3554,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2277:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3571,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3560,
                            "name": "html1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3520,
                            "src": "2322:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3565,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2357:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Contract_$3622",
                                      "typeString": "contract Contract"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Contract_$3622",
                                      "typeString": "contract Contract"
                                    }
                                  ],
                                  "id": 3564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2349:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3563,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2349:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2349:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3561,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2076,
                                "src": "2329:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$2076_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2075,
                              "src": "2329:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 3567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2329:34:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 3568,
                            "name": "html2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3523,
                            "src": "2366:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 3558,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2305:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2305:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2305:67:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2298:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3556,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2298:6:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:75:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2277:96:5"
                },
                {
                  "assignments": [
                    3573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3573,
                      "mutability": "mutable",
                      "name": "website",
                      "nameLocation": "2397:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 3620,
                      "src": "2383:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3572,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2383:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3588,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646174613a746578742f68746d6c3b6261736536342c",
                            "id": 3578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2431:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6821a9d92da4a69c351ed152ed3afe0634bc664f49b3570017996dd080983a2d",
                              "typeString": "literal_string \"data:text/html;base64,\""
                            },
                            "value": "data:text/html;base64,"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 3583,
                                    "name": "html",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3555,
                                    "src": "2477:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 3582,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2471:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 3581,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2471:5:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2471:11:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3579,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "2457:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$114_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 3580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52,
                              "src": "2457:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 3585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2457:26:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6821a9d92da4a69c351ed152ed3afe0634bc664f49b3570017996dd080983a2d",
                              "typeString": "literal_string \"data:text/html;base64,\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 3576,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2414:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2414:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2414:70:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2407:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3574,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2407:6:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:78:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2383:102:5"
                },
                {
                  "assignments": [
                    3590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3590,
                      "mutability": "mutable",
                      "name": "json",
                      "nameLocation": "2527:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 3620,
                      "src": "2513:18:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3589,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2513:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3606,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "7b226e616d65223a20224e465420576562736572766572222c20226465736372697074696f6e223a202254686973204e46542073657276657320616e2068746d6c207061676520746861742063616e206265207573656420746f206d696e74206d6f726520746f6b656e732066726f6d207468697320636f6c6c656374696f6e2e222c2022696d616765223a2022",
                                    "id": 3599,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2582:144:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b48553ca3b41e7f7b0ecd4750087573161d0caba3191e4b471455ec87b009b53",
                                      "typeString": "literal_string \"{\"name\": \"NFT Webserver\", \"description\": \"This NFT serves an html page that can be used to mint more tokens from this collection.\", \"image\": \"\""
                                    },
                                    "value": "{\"name\": \"NFT Webserver\", \"description\": \"This NFT serves an html page that can be used to mint more tokens from this collection.\", \"image\": \""
                                  },
                                  {
                                    "id": 3600,
                                    "name": "website",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3573,
                                    "src": "2727:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "227d",
                                    "id": 3601,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2735:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                      "typeString": "literal_string \"\"}\""
                                    },
                                    "value": "\"}"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_b48553ca3b41e7f7b0ecd4750087573161d0caba3191e4b471455ec87b009b53",
                                      "typeString": "literal_string \"{\"name\": \"NFT Webserver\", \"description\": \"This NFT serves an html page that can be used to mint more tokens from this collection.\", \"image\": \"\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                      "typeString": "literal_string \"\"}\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 3597,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2561:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 3598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2561:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 3602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2561:179:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 3596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2554:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 3595,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "2554:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2554:187:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 3594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2548:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 3593,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2548:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2548:194:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3591,
                        "name": "Base64",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2534:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Base64_$114_$",
                          "typeString": "type(library Base64)"
                        }
                      },
                      "id": 3592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "2534:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (string memory)"
                      }
                    },
                    "id": 3605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2534:209:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2513:230:5"
                },
                {
                  "expression": {
                    "id": 3616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3607,
                      "name": "json",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3590,
                      "src": "2786:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                              "id": 3612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2817:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                "typeString": "literal_string \"data:application/json;base64,\""
                              },
                              "value": "data:application/json;base64,"
                            },
                            {
                              "id": 3613,
                              "name": "json",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3590,
                              "src": "2850:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                "typeString": "literal_string \"data:application/json;base64,\""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 3610,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2800:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2800:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2800:55:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2793:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3608,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2793:6:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2793:63:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2786:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3617,
                  "nodeType": "ExpressionStatement",
                  "src": "2786:70:5"
                },
                {
                  "expression": {
                    "id": 3618,
                    "name": "json",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3590,
                    "src": "2900:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3553,
                  "id": 3619,
                  "nodeType": "Return",
                  "src": "2893:11:5"
                }
              ]
            },
            "baseFunctions": [
              2979
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2204:8:5",
            "overrides": {
              "id": 3550,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2234:8:5"
            },
            "parameters": {
              "id": 3549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3548,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "2213:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:9:5"
            },
            "returnParameters": {
              "id": 3553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3621,
                  "src": "2252:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3551,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2251:15:5"
            },
            "scope": 3622,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3511,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3485,
              "src": "210:6:5"
            },
            "id": 3512,
            "nodeType": "InheritanceSpecifier",
            "src": "210:6:5"
          }
        ],
        "canonicalName": "Contract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3622,
          3485
        ],
        "name": "Contract",
        "nameLocation": "198:8:5",
        "scope": 3623,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 5
}